{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Views\\\\CustomerAddressesView\\\\CustomerAddressesView.tsx\",\n  _s = $RefreshSig$();\nimport useCustomerAddresses from \"src/hooks/useCustomerAddresses\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport GenericTable from \"src/Components/GenericTable/GenericTable\";\nimport { setSelectedCustomerAddresses } from \"src/redux/features/customerAddresses/customerAddressesSlice\";\nimport { useCallback } from \"react\";\nimport HoveringButton from \"src/Components/HoveringButton/HoveringButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CustomerAddressesView() {\n  _s();\n  // Utilize the custom hook to access customerAddresses data and functionalities\n  const {\n    customerAddresses\n  } = useCustomerAddresses();\n  console.log();\n  // Select the customerAddresses slice from the Redux store\n  const selectedAddresses = useSelector(state => state.customerAddresses.selectedCustomerAddresses);\n  const dispatch = useDispatch();\n  const handleSelectedItemsChange = useCallback(newSelectedItems => {\n    dispatch(setSelectedCustomerAddresses(newSelectedItems));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GenericTable, {\n      data: customerAddresses,\n      selectedItems: selectedAddresses,\n      getItemId: item => item.customerId + item.addressId,\n      onSelectedItemsChange: handleSelectedItemsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HoveringButton, {\n      data: customerAddresses,\n      selectedItems: selectedAddresses,\n      getItemId: item => item.customerId + item.addressId,\n      onSelectedItemsChange: handleSelectedItemsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CustomerAddressesView, \"C4MzPnPhzoy38XgkePPWH6JdGlw=\", false, function () {\n  return [useCustomerAddresses, useSelector, useDispatch];\n});\n_c = CustomerAddressesView;\nexport default CustomerAddressesView;\nvar _c;\n$RefreshReg$(_c, \"CustomerAddressesView\");","map":{"version":3,"names":["useCustomerAddresses","useDispatch","useSelector","GenericTable","setSelectedCustomerAddresses","useCallback","HoveringButton","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerAddressesView","_s","customerAddresses","console","log","selectedAddresses","state","selectedCustomerAddresses","dispatch","handleSelectedItemsChange","newSelectedItems","children","data","selectedItems","getItemId","item","customerId","addressId","onSelectedItemsChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Views/CustomerAddressesView/CustomerAddressesView.tsx"],"sourcesContent":["import useCustomerAddresses from \"src/hooks/useCustomerAddresses\";\r\nimport IProjectCustomerDetailsModel from \"../../Models/ProjectCustomerDetailsModel\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"src/redux/store\";\r\nimport GenericTable from \"src/Components/GenericTable/GenericTable\";\r\nimport { setSelectedCustomerAddresses } from \"src/redux/features/customerAddresses/customerAddressesSlice\";\r\nimport { useCallback } from \"react\";\r\nimport HoveringButton from \"src/Components/HoveringButton/HoveringButton\";\r\n\r\nfunction CustomerAddressesView(): JSX.Element {\r\n  // Utilize the custom hook to access customerAddresses data and functionalities\r\n  const { customerAddresses } = useCustomerAddresses();\r\nconsole.log()\r\n  // Select the customerAddresses slice from the Redux store\r\n  const selectedAddresses = useSelector(\r\n    (state: RootState) => state.customerAddresses.selectedCustomerAddresses\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSelectedItemsChange = useCallback(\r\n    (newSelectedItems: Record<string, IProjectCustomerDetailsModel>) => {\r\n      dispatch(setSelectedCustomerAddresses(newSelectedItems));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <GenericTable<IProjectCustomerDetailsModel>\r\n        data={customerAddresses}\r\n        selectedItems={selectedAddresses}\r\n        getItemId={(item) => item.customerId + item.addressId}\r\n        onSelectedItemsChange={handleSelectedItemsChange}\r\n      />\r\n      <HoveringButton<IProjectCustomerDetailsModel>\r\n        data={customerAddresses}\r\n        selectedItems={selectedAddresses}\r\n        getItemId={(item) => item.customerId + item.addressId}\r\n        onSelectedItemsChange={handleSelectedItemsChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default CustomerAddressesView;\r\n"],"mappings":";;AAAA,OAAOA,oBAAoB,MAAM,gCAAgC;AAEjE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,YAAY,MAAM,0CAA0C;AACnE,SAASC,4BAA4B,QAAQ,6DAA6D;AAC1G,SAASC,WAAW,QAAQ,OAAO;AACnC,OAAOC,cAAc,MAAM,8CAA8C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1E,SAASC,qBAAqBA,CAAA,EAAgB;EAAAC,EAAA;EAC5C;EACA,MAAM;IAAEC;EAAkB,CAAC,GAAGb,oBAAoB,CAAC,CAAC;EACtDc,OAAO,CAACC,GAAG,CAAC,CAAC;EACX;EACA,MAAMC,iBAAiB,GAAGd,WAAW,CAClCe,KAAgB,IAAKA,KAAK,CAACJ,iBAAiB,CAACK,yBAChD,CAAC;EAED,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAMmB,yBAAyB,GAAGf,WAAW,CAC1CgB,gBAA8D,IAAK;IAClEF,QAAQ,CAACf,4BAA4B,CAACiB,gBAAgB,CAAC,CAAC;EAC1D,CAAC,EACD,CAACF,QAAQ,CACX,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACL,YAAY;MACXoB,IAAI,EAAEV,iBAAkB;MACxBW,aAAa,EAAER,iBAAkB;MACjCS,SAAS,EAAGC,IAAI,IAAKA,IAAI,CAACC,UAAU,GAAGD,IAAI,CAACE,SAAU;MACtDC,qBAAqB,EAAET;IAA0B;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACFzB,OAAA,CAACF,cAAc;MACbiB,IAAI,EAAEV,iBAAkB;MACxBW,aAAa,EAAER,iBAAkB;MACjCS,SAAS,EAAGC,IAAI,IAAKA,IAAI,CAACC,UAAU,GAAGD,IAAI,CAACE,SAAU;MACtDC,qBAAqB,EAAET;IAA0B;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA,eACF,CAAC;AAEP;AAACrB,EAAA,CAlCQD,qBAAqB;EAAA,QAEEX,oBAAoB,EAGxBE,WAAW,EAIpBD,WAAW;AAAA;AAAAiC,EAAA,GATrBvB,qBAAqB;AAmC9B,eAAeA,qBAAqB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
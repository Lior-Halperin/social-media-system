{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Components\\\\GenericTable\\\\GenericTable.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useMemo, useRef } from \"react\";\nimport { StyledWrapper, StyleTableRow, StyledTable, StyledTableHeader, StyleFlipTbody, StyleFlipTableRowInner, StyledFlipTableDataFront, StyledFlipTableDataBack, StyledInput } from \"./GenericTable.styled\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenericTable({\n  data,\n  selectedItems,\n  getItemId,\n  onSelectedItemsChange\n}) {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [flippedRow, setFlippedRow] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const editedItem = useRef(u);\n  useEffect(() => {\n    setTableData(data);\n  }, [data]);\n  const handleCheckboxChange = useCallback(item => {\n    const newCheckboxState = {\n      ...selectedItems\n    };\n    const itemId = getItemId(item);\n    if (newCheckboxState[itemId]) {\n      delete newCheckboxState[itemId];\n    } else {\n      newCheckboxState[itemId] = item;\n    }\n    onSelectedItemsChange(newCheckboxState);\n    return newCheckboxState;\n  }, [selectedItems, getItemId, onSelectedItemsChange]);\n  const handleCardClick = itemId => {\n    if (itemId !== flippedRow) {\n      setFlippedRow(flippedRow === itemId ? null : itemId);\n    }\n  };\n  const handleInputChange = useCallback((itemId, field, value) => {\n    // setEditedData((prevData) => ({\n    //   ...prevData,\n    //   [itemId]: {\n    //     ...prevData[itemId],\n    //     [field]: value,\n    //   },\n    // }));\n  }, [data]);\n  const tableHeaders = useMemo(() => {\n    return data.length > 0 ? Object.keys(data[0]) : [];\n  }, [data]);\n  const onSubmit = async formData => {\n    try {\n      console.log(formData);\n      //   await axios.post(\"/api/update-data\", formData);\n      //   onSubmitSuccess();\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  if (tableData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: \"Loading...\"\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n    className: \"generic-table\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(StyledTable, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(StyleTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableHeader, {\n              children: \"\"\n            }, \"header\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this), tableHeaders.map(header => /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n              children: header\n            }, header, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StyleFlipTbody, {\n          children: tableData.map(item => {\n            const itemId = getItemId(item);\n            const isFlipped = flippedRow === itemId;\n            return /*#__PURE__*/_jsxDEV(StyleFlipTableRowInner, {\n              onClick: () => handleCardClick(itemId) // For flip the card\n              ,\n              onBlur: () => console.log(itemId),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: `checkbox-${itemId}`,\n                  label: \"\",\n                  checked: !!selectedItems[itemId],\n                  onChange: () => handleCheckboxChange(item)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), tableHeaders.map(header => isFlipped ? /*#__PURE__*/_jsxDEV(StyledFlipTableDataBack, {\n                $isflipped: isFlipped // Use $ prefix for transient props\n                ,\n                children: /*#__PURE__*/_jsxDEV(StyledInput, {\n                  defaultValue: String(item[header]),\n                  ...register(`${itemId}.${header}`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this)\n              }, `${itemId}-${header}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(StyledFlipTableDataFront, {\n                children: String(item[header])\n              }, `${itemId}-${header}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this))]\n            }, itemId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)\n  }, Math.random(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(GenericTable, \"EL+4zpQbbZWsmWXjsZ3zt8kPivg=\", false, function () {\n  return [useForm];\n});\n_c = GenericTable;\nexport default GenericTable;\nvar _c;\n$RefreshReg$(_c, \"GenericTable\");","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","useRef","StyledWrapper","StyleTableRow","StyledTable","StyledTableHeader","StyleFlipTbody","StyleFlipTableRowInner","StyledFlipTableDataFront","StyledFlipTableDataBack","StyledInput","Checkbox","useForm","jsxDEV","_jsxDEV","GenericTable","data","selectedItems","getItemId","onSelectedItemsChange","_s","tableData","setTableData","flippedRow","setFlippedRow","editedData","setEditedData","register","handleSubmit","editedItem","u","handleCheckboxChange","item","newCheckboxState","itemId","handleCardClick","handleInputChange","field","value","tableHeaders","length","Object","keys","onSubmit","formData","console","log","error","children","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","className","map","header","isFlipped","onClick","onBlur","id","label","checked","onChange","$isflipped","defaultValue","String","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Components/GenericTable/GenericTable.tsx"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo, useRef } from \"react\";\r\nimport {\r\n  StyledWrapper,\r\n  StyleTableRow,\r\n  StyledTable,\r\n  StyledTableHeader,\r\n  StyleFlipTbody,\r\n  StyleFlipTableRowInner,\r\n  StyledFlipTableDataFront,\r\n  StyledFlipTableDataBack,\r\n  StyledInput,\r\n} from \"./GenericTable.styled\";\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\nimport { Path, SubmitHandler, useForm } from \"react-hook-form\";\r\n\r\nexport interface GenericTableProps<T extends object> {\r\n  data: T[];\r\n  selectedItems: Record<string, T>;\r\n  getItemId: (item: T) => number;\r\n  onSelectedItemsChange: (selectedItems: Record<string, T>) => void;\r\n}\r\n\r\nfunction GenericTable<T extends object>({\r\n  data,\r\n  selectedItems,\r\n  getItemId,\r\n  onSelectedItemsChange,\r\n}: GenericTableProps<T>): JSX.Element {\r\n  const [tableData, setTableData] = useState<T[]>([]);\r\n  const [flippedRow, setFlippedRow] = useState<number | null>(null);\r\n  const [editedData, setEditedData] = useState<Record<number, Partial<T>>>({});\r\n  const { register, handleSubmit } = useForm<T>();\r\nconst editedItem = useRef(u)\r\n  useEffect(() => {\r\n    setTableData(data);\r\n  }, [data]);\r\n\r\n  \r\n  const handleCheckboxChange = useCallback(\r\n    (item: T) => {\r\n      const newCheckboxState = { ...selectedItems };\r\n      const itemId = getItemId(item);\r\n      if (newCheckboxState[itemId]) {\r\n        delete newCheckboxState[itemId];\r\n      } else {\r\n        newCheckboxState[itemId] = item;\r\n      }\r\n      onSelectedItemsChange(newCheckboxState);\r\n      return newCheckboxState;\r\n    },\r\n    [selectedItems, getItemId, onSelectedItemsChange]\r\n  );\r\n\r\n  const handleCardClick = (itemId: number) => {\r\n    if(itemId !== flippedRow){\r\n\r\n    setFlippedRow(flippedRow === itemId ? null : itemId);\r\n    }\r\n};\r\n\r\n  const handleInputChange = useCallback( (itemId: number, field: keyof T, value: string) => {\r\n    // setEditedData((prevData) => ({\r\n    //   ...prevData,\r\n    //   [itemId]: {\r\n    //     ...prevData[itemId],\r\n    //     [field]: value,\r\n    //   },\r\n    // }));\r\n  },[data]);\r\n\r\n\r\n  const tableHeaders = useMemo(() => {\r\n    return data.length > 0 ? Object.keys(data[0]) : [];\r\n  }, [data]);\r\n\r\n  const onSubmit: SubmitHandler<T> = async (formData) => {\r\n    try {\r\n        console.log(formData)\r\n    //   await axios.post(\"/api/update-data\", formData);\r\n    //   onSubmitSuccess();\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  if (tableData.length === 0) {\r\n    return <StyledWrapper key={Math.random()}>Loading...</StyledWrapper>;\r\n  }\r\n\r\n  return (\r\n    <StyledWrapper className=\"generic-table\" key={Math.random()}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n      <StyledTable>\r\n        <thead>\r\n          <StyleTableRow>\r\n            <StyledTableHeader key={\"header\"}>{\"\"}</StyledTableHeader>\r\n            {tableHeaders.map((header) => (\r\n              <StyledTableHeader key={header}>{header}</StyledTableHeader>\r\n            ))}\r\n          </StyleTableRow>\r\n        </thead>\r\n        <StyleFlipTbody >\r\n          {tableData.map((item) => {\r\n            const itemId = getItemId(item);\r\n            const isFlipped = flippedRow === itemId;\r\n            return (\r\n              <StyleFlipTableRowInner\r\n                key={itemId}\r\n                onClick={() => handleCardClick(itemId)} // For flip the card\r\n                onBlur={()=>console.log(itemId)}\r\n              >\r\n                <td>\r\n                  <Checkbox\r\n                    id={`checkbox-${itemId}`}\r\n                    label=\"\"\r\n                    checked={!!selectedItems[itemId]}\r\n                    onChange={() => handleCheckboxChange(item)}\r\n                  />\r\n                </td>\r\n                {tableHeaders.map((header) =>\r\n                  isFlipped ? (\r\n                    <StyledFlipTableDataBack\r\n                      $isflipped={isFlipped} // Use $ prefix for transient props\r\n                      key={`${itemId}-${header}`}\r\n                    >\r\n                      {/* <StyledInput\r\n                        type=\"text\"\r\n                        value={String(item[header as keyof T])}\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            itemId,\r\n                            header as keyof T,\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      /> */}\r\n                    <StyledInput\r\n                      defaultValue={String(item[header as keyof T])}\r\n                      {...register(`${itemId}.${header}` as Path<T>)}\r\n                    />\r\n                    </StyledFlipTableDataBack>\r\n                  ) : (\r\n                    <StyledFlipTableDataFront\r\n                      key={`${itemId}-${header}`}\r\n                    >\r\n                      {String(item[header as keyof T])}\r\n                    </StyledFlipTableDataFront>\r\n                  )\r\n                )}\r\n              </StyleFlipTableRowInner>\r\n            );\r\n          })}\r\n        </StyleFlipTbody>\r\n      </StyledTable>\r\n      </form>\r\n    </StyledWrapper>\r\n  );\r\n}\r\n\r\nexport default GenericTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
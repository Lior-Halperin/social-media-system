{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { memo, useCallback, useEffect, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyle from \"./Theme/globalStyle\";\nimport lightTheme from \"./Theme/lightTheme\";\nimport darkTheme from \"./Theme/darkTheme\";\nimport { StyledWrapper } from \"./App.styled\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport Dropdown from \"./Components/Dropdown/Dropdown\";\nimport useVolunteerProject from \"./hooks/useVolunteerProjects\";\nimport { useDispatch } from \"react-redux\";\nimport { setSelectedVolunteerProject } from \"./redux/features/volunteerProjects/volunteerProjectsSlice\";\nimport useCustomerAddresses from \"./hooks/useCustomerAddresses\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _selectedProject$proj;\n  const [theme, setTheme] = useState(darkTheme);\n  const {\n    volunteerProject\n  } = useVolunteerProject();\n  const [selectedProject, setSelectedProject] = useState(volunteerProject[volunteerProject.length - 1]);\n  const {\n    useGetCustomerAddressesById\n  } = useCustomerAddresses();\n  const toggleTheme = useCallback(() => {\n    setTheme(prevTheme => prevTheme === lightTheme ? darkTheme : lightTheme);\n  }, []);\n  const navLinks = [{\n    path: \"/\",\n    namePage: \"home\"\n  }, {\n    path: \"/add-customer\",\n    namePage: \"add customer\"\n  }, {\n    path: \"/social-customer\",\n    namePage: \"social customer\"\n  }];\n  const {\n    status,\n    error\n  } = useGetCustomerAddressesById((_selectedProject$proj = selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.project_id) !== null && _selectedProject$proj !== void 0 ? _selectedProject$proj : -1); //called with selectedCustomerId ?? -1. This ensures that the query is only enabled when selectedCustomerId is not null.\n\n  const options = volunteerProject.map(project => ({\n    date: project.date,\n    name: project.name,\n    project_id: project.project_id\n  }));\n  const dispatch = useDispatch();\n  const handleSelect = useCallback(option => {\n    setSelectedProject(option);\n    dispatch(setSelectedVolunteerProject(option));\n  }, [dispatch]);\n  useEffect(() => {\n    setSelectedProject(volunteerProject[volunteerProject.length - 1]);\n  }, [volunteerProject]);\n\n  //   if(status === \"loading\") return <h1>loading addresses....</h1>\n  //   if(status === \"error\") return <h1>{JSON.stringify(error)}</h1>\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [\"header\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          children: \"Toggle Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n          links: navLinks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          options: options,\n          onSelect: handleSelect,\n          placeholder: selectedProject ? selectedProject.name : \"Select an option\",\n          renderOption: option => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: option.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: \">Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: \"footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hEp7nju+45UFo4n7q5VWT2zfNBU=\", false, function () {\n  return [useVolunteerProject, useCustomerAddresses, useGetCustomerAddressesById, useDispatch];\n});\n_c = App;\nexport default _c2 = /*#__PURE__*/memo(App);\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useCallback","useEffect","useState","ThemeProvider","GlobalStyle","lightTheme","darkTheme","StyledWrapper","NavBar","Dropdown","useVolunteerProject","useDispatch","setSelectedVolunteerProject","useCustomerAddresses","jsxDEV","_jsxDEV","App","_s","_selectedProject$proj","theme","setTheme","volunteerProject","selectedProject","setSelectedProject","length","useGetCustomerAddressesById","toggleTheme","prevTheme","navLinks","path","namePage","status","error","project_id","options","map","project","date","name","dispatch","handleSelect","option","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","links","onSelect","placeholder","renderOption","_c","_c2","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/App.tsx"],"sourcesContent":["import { memo, useCallback, useEffect, useState } from \"react\";\r\nimport styled, { ThemeProvider, DefaultTheme } from \"styled-components\";\r\nimport GlobalStyle from \"./Theme/globalStyle\";\r\nimport lightTheme from \"./Theme/lightTheme\";\r\nimport darkTheme from \"./Theme/darkTheme\";\r\nimport Splash from \"./Views/Splash/Splash\";\r\nimport Routing from \"./Components/Routing\";\r\nimport { StyledWrapper } from \"./App.styled\";\r\nimport NavBar from \"./Components/NavBar/NavBar\";\r\nimport Dropdown from \"./Components/Dropdown/Dropdown\";\r\nimport useVolunteerProject from \"./hooks/useVolunteerProjects\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setSelectedVolunteerProject } from \"./redux/features/volunteerProjects/volunteerProjectsSlice\";\r\nimport { IVolunteerProjectModel } from \"./Models/VolunteerProjectModel\";\r\nimport useCustomerAddresses from \"./hooks/useCustomerAddresses\";\r\n\r\nfunction App() {\r\n\r\n  const [theme, setTheme] = useState<DefaultTheme>(darkTheme);\r\n\r\n  const { volunteerProject } = useVolunteerProject();\r\n\r\n  const [selectedProject, setSelectedProject] =\r\n    useState<IVolunteerProjectModel | null>(\r\n      volunteerProject[volunteerProject.length - 1]\r\n    );\r\n\r\n  const {useGetCustomerAddressesById } = useCustomerAddresses();\r\n\r\n  const toggleTheme = useCallback(() => {\r\n    setTheme((prevTheme) =>\r\n      prevTheme === lightTheme ? darkTheme : lightTheme\r\n    );\r\n  }, []);\r\n\r\n  const navLinks = [\r\n    { path: \"/\", namePage: \"home\" },\r\n    { path: \"/add-customer\", namePage: \"add customer\" },\r\n    { path: \"/social-customer\", namePage: \"social customer\" },\r\n  ];\r\n\r\n\r\n   const {status,error}=useGetCustomerAddressesById(\r\n    selectedProject?.project_id ?? -1\r\n  ); //called with selectedCustomerId ?? -1. This ensures that the query is only enabled when selectedCustomerId is not null.\r\n\r\n  const options: IVolunteerProjectModel[] = volunteerProject.map((project) => ({\r\n    date: project.date,\r\n    name: project.name,\r\n    project_id: project.project_id,\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n  const handleSelect = useCallback(\r\n    (option: IVolunteerProjectModel) => {\r\n      setSelectedProject(option);\r\n      dispatch(setSelectedVolunteerProject(option));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setSelectedProject(volunteerProject[volunteerProject.length - 1]);\r\n  }, [volunteerProject]);\r\n\r\n//   if(status === \"loading\") return <h1>loading addresses....</h1>\r\n//   if(status === \"error\") return <h1>{JSON.stringify(error)}</h1>\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <StyledWrapper>\r\n        <header>\r\n          header\r\n          <button onClick={toggleTheme}>Toggle Theme</button>\r\n          <NavBar links={navLinks} />\r\n          <Dropdown\r\n            options={options}\r\n            onSelect={handleSelect}\r\n            placeholder={\r\n              selectedProject ? selectedProject.name : \"Select an option\"\r\n            }\r\n            renderOption={(option) => <span>{option.name}</span>}\r\n          />\r\n        </header>\r\n        <hr />\r\n        <main>\r\n          {/* <Routing />\r\n           */}\r\n           >Table\r\n        </main>\r\n        <hr />\r\n        <footer>footer</footer>\r\n      </StyledWrapper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default memo(App);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
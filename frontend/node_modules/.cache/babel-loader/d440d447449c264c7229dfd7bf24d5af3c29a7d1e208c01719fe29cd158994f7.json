{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from \"react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ApiService from \"src/Utils/ApiService\";\nimport { setVolunteerProject } from \"src/redux/features/volunteerProjects/volunteerProjectsSlice\";\nfunction useVolunteerProject() {\n  _s();\n  const dispatch = useDispatch();\n  const volunteerProject = useSelector(state => state.volunteerProject.volunteerProject);\n  const volunteerProjectApi = new ApiService(\"volunteerProjectsEndPoint\");\n  const {\n    isLoading,\n    isError,\n    error\n  } = useQuery(\"volunteerProject\", async () => {\n    try {\n      const data = await volunteerProjectApi.getAll();\n      dispatch(setVolunteerProject(data));\n      return data;\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }, {\n    initialData: volunteerProject.length > 0 ? volunteerProject : undefined\n  });\n  return {\n    volunteerProject,\n    isLoading,\n    isError,\n    error\n  };\n}\n_s(useVolunteerProject, \"ZscY3LN3TJ5wqMyR54nDgnQxoe4=\", false, function () {\n  return [useDispatch, useSelector, useQuery];\n});\nexport default useVolunteerProject;","map":{"version":3,"names":["useQuery","useDispatch","useSelector","ApiService","setVolunteerProject","useVolunteerProject","_s","dispatch","volunteerProject","state","volunteerProjectApi","isLoading","isError","error","data","getAll","err","console","log","initialData","length","undefined"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/hooks/useVolunteerProjects.ts"],"sourcesContent":["import { useQuery } from \"react-query\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\nimport ApiService from \"src/Utils/ApiService\";\r\nimport { IVolunteerProjectModel } from \"src/Models/VolunteerProjectModel\";\r\nimport { setVolunteerProject } from \"src/redux/features/volunteerProjects/volunteerProjectsSlice\";\r\n\r\nfunction useVolunteerProject() {\r\n  const dispatch = useDispatch();\r\n\r\n  const volunteerProject = useSelector(\r\n    (state: RootState) => state.volunteerProject.volunteerProject\r\n  );\r\n\r\n  const volunteerProjectApi = new ApiService<IVolunteerProjectModel>(\r\n    \"volunteerProjectsEndPoint\"\r\n  );\r\n\r\n  const { isLoading, isError, error } = useQuery(\r\n    \"volunteerProject\",\r\n    async () => {\r\n      try {\r\n        const data = await volunteerProjectApi.getAll();\r\n        dispatch(setVolunteerProject(data));\r\n        return data;\r\n      } catch (err: any) {\r\n        console.log(err);\r\n        throw err;\r\n      }\r\n    },\r\n    { initialData: volunteerProject.length > 0 ? volunteerProject : undefined }\r\n  );\r\n  return { volunteerProject, isLoading, isError, error };\r\n}\r\n\r\nexport default useVolunteerProject;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,UAAU,MAAM,sBAAsB;AAE7C,SAASC,mBAAmB,QAAQ,6DAA6D;AAEjG,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAE9B,MAAMO,gBAAgB,GAAGN,WAAW,CACjCO,KAAgB,IAAKA,KAAK,CAACD,gBAAgB,CAACA,gBAC/C,CAAC;EAED,MAAME,mBAAmB,GAAG,IAAIP,UAAU,CACxC,2BACF,CAAC;EAED,MAAM;IAAEQ,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGb,QAAQ,CAC5C,kBAAkB,EAClB,YAAY;IACV,IAAI;MACF,MAAMc,IAAI,GAAG,MAAMJ,mBAAmB,CAACK,MAAM,CAAC,CAAC;MAC/CR,QAAQ,CAACH,mBAAmB,CAACU,IAAI,CAAC,CAAC;MACnC,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOE,GAAQ,EAAE;MACjBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,MAAMA,GAAG;IACX;EACF,CAAC,EACD;IAAEG,WAAW,EAAEX,gBAAgB,CAACY,MAAM,GAAG,CAAC,GAAGZ,gBAAgB,GAAGa;EAAU,CAC5E,CAAC;EACD,OAAO;IAAEb,gBAAgB;IAAEG,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC;AACxD;AAACP,EAAA,CA1BQD,mBAAmB;EAAA,QACTJ,WAAW,EAEHC,WAAW,EAQEF,QAAQ;AAAA;AAiBhD,eAAeK,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
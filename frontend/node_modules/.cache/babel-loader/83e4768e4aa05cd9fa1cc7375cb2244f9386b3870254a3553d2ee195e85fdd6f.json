{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Components\\\\GenericTable\\\\GenericTable.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { StyledWrapper, StyleTableRow, StyledTable, StyledTableHeader, StyleFlipTbody, StyleFlipTableRowInner, StyledFlipTableDataFront, StyledFlipTableDataBack, StyledInput } from \"./GenericTable.styled\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenericTable({\n  data,\n  selectedItems,\n  getItemId,\n  onSelectedItemsChange\n}) {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [flippedRow, setFlippedRow] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm();\n  useEffect(() => {\n    setTableData(data);\n  }, [data]);\n  const handleCardClick = useCallback(itemId => {\n    if (itemId !== flippedRow) {\n      setFlippedRow(flippedRow === itemId ? null : itemId);\n    }\n  }, []);\n  const handleInputChange = send => {\n    console.log(send);\n  };\n\n  //   const handleInputChange = (itemId: number, field: keyof T, value: string) => {\n  //     console.log(itemId, field, value);\n  //     setEditedData((prevData) => ({\n  //       ...prevData,\n  //       [itemId]: {\n  //         ...prevData[itemId],\n  //         [field]: value,\n  //       },\n  //     }));\n  //   };\n\n  const handleCheckboxChange = useCallback(item => {\n    const newCheckboxState = {\n      ...selectedItems\n    };\n    const itemId = getItemId(item);\n    if (newCheckboxState[itemId]) {\n      delete newCheckboxState[itemId];\n    } else {\n      newCheckboxState[itemId] = item;\n    }\n    onSelectedItemsChange(newCheckboxState);\n    return newCheckboxState;\n  }, [selectedItems, getItemId, onSelectedItemsChange]);\n  const tableHeaders = useMemo(() => {\n    return data.length > 0 ? Object.keys(data[0]) : [];\n  }, [data]);\n  if (tableData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: \"Loading...\"\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n    className: \"generic-table\",\n    children: /*#__PURE__*/_jsxDEV(StyledTable, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(StyleTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableHeader, {\n            children: \"\"\n          }, \"header\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), tableHeaders.map(header => /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyleFlipTbody, {\n        children: tableData.map(item => {\n          const itemId = getItemId(item);\n          const isFlipped = flippedRow === itemId;\n          return /*#__PURE__*/_jsxDEV(StyleFlipTableRowInner, {\n            onClick: () => handleCardClick(itemId),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                id: `checkbox-${itemId}`,\n                label: \"\",\n                checked: !!selectedItems[itemId],\n                onChange: () => handleCheckboxChange(item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), tableHeaders.map(header => isFlipped ? /*#__PURE__*/_jsxDEV(StyledFlipTableDataBack, {\n              $isflipped: isFlipped // Use $ prefix for transient props\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit(handleInputChange),\n                children: /*#__PURE__*/_jsxDEV(StyledInput, {\n                  defaultValue: String(item[header]),\n                  ...register(header)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 23\n              }, this)\n            }, `${itemId}-${header}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(StyledFlipTableDataFront, {\n              children: String(item[header])\n            }, `${itemId}-${header}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this))]\n          }, itemId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, Math.random(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(GenericTable, \"wucFP7ZDG2eDzmlgzMGxbbNbETw=\", false, function () {\n  return [useForm];\n});\n_c = GenericTable;\nexport default GenericTable;\nvar _c;\n$RefreshReg$(_c, \"GenericTable\");","map":{"version":3,"names":["useState","useEffect","useCallback","StyledWrapper","StyleTableRow","StyledTable","StyledTableHeader","StyleFlipTbody","StyleFlipTableRowInner","StyledFlipTableDataFront","StyledFlipTableDataBack","StyledInput","Checkbox","useForm","jsxDEV","_jsxDEV","GenericTable","data","selectedItems","getItemId","onSelectedItemsChange","_s","tableData","setTableData","flippedRow","setFlippedRow","editedData","setEditedData","register","handleSubmit","formState","handleCardClick","itemId","handleInputChange","send","console","log","handleCheckboxChange","item","newCheckboxState","tableHeaders","useMemo","length","Object","keys","children","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","className","map","header","isFlipped","onClick","id","label","checked","onChange","$isflipped","onSubmit","defaultValue","String","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Components/GenericTable/GenericTable.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  StyledWrapper,\r\n  StyleTableRow,\r\n  StyledTable,\r\n  StyledTableHeader,\r\n  StyleFlipTbody,\r\n  StyleFlipTableRowInner,\r\n  StyledFlipTableDataFront,\r\n  StyledFlipTableDataBack,\r\n  StyledInput,\r\n} from \"./GenericTable.styled\";\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { send } from \"process\";\r\n\r\nexport interface GenericTableProps<T extends object> {\r\n  data: T[];\r\n  selectedItems: Record<string, T>;\r\n  getItemId: (item: T) => number;\r\n  onSelectedItemsChange: (selectedItems: Record<string, T>) => void;\r\n}\r\n\r\nfunction GenericTable<T extends object>({\r\n  data,\r\n  selectedItems,\r\n  getItemId,\r\n  onSelectedItemsChange,\r\n}: GenericTableProps<T>): JSX.Element {\r\n  const [tableData, setTableData] = useState<T[]>([]);\r\n  const [flippedRow, setFlippedRow] = useState<number | null>(null);\r\n  const [editedData, setEditedData] = useState<Record<number, Partial<T>>>({});\r\n\r\n  const {register, handleSubmit, formState} = useForm<T>()\r\n  useEffect(() => {\r\n    setTableData(data);\r\n  }, [data]);\r\n\r\n  const handleCardClick = useCallback((itemId: number) => {\r\n    if (itemId !== flippedRow) {\r\n      setFlippedRow(flippedRow === itemId ? null : itemId);\r\n    }\r\n  }, []);\r\n\r\n  const handleInputChange = (send:any) => {\r\n    console.log(send);\r\n};\r\n\r\n//   const handleInputChange = (itemId: number, field: keyof T, value: string) => {\r\n//     console.log(itemId, field, value);\r\n//     setEditedData((prevData) => ({\r\n//       ...prevData,\r\n//       [itemId]: {\r\n//         ...prevData[itemId],\r\n//         [field]: value,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n  const handleCheckboxChange = useCallback(\r\n    (item: T) => {\r\n      const newCheckboxState = { ...selectedItems };\r\n      const itemId = getItemId(item);\r\n      if (newCheckboxState[itemId]) {\r\n        delete newCheckboxState[itemId];\r\n      } else {\r\n        newCheckboxState[itemId] = item;\r\n      }\r\n      onSelectedItemsChange(newCheckboxState);\r\n      return newCheckboxState;\r\n    },\r\n    [selectedItems, getItemId, onSelectedItemsChange]\r\n  );\r\n\r\n  const tableHeaders = useMemo(() => {\r\n    return data.length > 0 ? Object.keys(data[0]) : [];\r\n  }, [data]);\r\n  \r\n  if (tableData.length === 0) {\r\n    return <StyledWrapper key={Math.random()}>Loading...</StyledWrapper>;\r\n  }\r\n\r\n  return (\r\n    <StyledWrapper className=\"generic-table\" key={Math.random()}>\r\n      <StyledTable>\r\n        <thead>\r\n          <StyleTableRow>\r\n            <StyledTableHeader key={\"header\"}>{\"\"}</StyledTableHeader>\r\n            {tableHeaders.map((header) => (\r\n              <StyledTableHeader key={header}>{header}</StyledTableHeader>\r\n            ))}\r\n          </StyleTableRow>\r\n        </thead>\r\n        <StyleFlipTbody>\r\n          {tableData.map((item) => {\r\n            const itemId = getItemId(item);\r\n            const isFlipped = flippedRow === itemId;\r\n            return (\r\n              <StyleFlipTableRowInner\r\n                key={itemId}\r\n                onClick={() => handleCardClick(itemId)}\r\n              >\r\n                <td>\r\n                  <Checkbox\r\n                    id={`checkbox-${itemId}`}\r\n                    label=\"\"\r\n                    checked={!!selectedItems[itemId]}\r\n                    onChange={() => handleCheckboxChange(item)}\r\n                  />\r\n                </td>\r\n                {tableHeaders.map((header) =>\r\n                  isFlipped ? (\r\n                    <StyledFlipTableDataBack\r\n                      $isflipped={isFlipped} // Use $ prefix for transient props\r\n                      key={`${itemId}-${header}`}\r\n                    >\r\n                      {/* <StyledInput\r\n                        type=\"text\"\r\n                        value={String(item[header as keyof T])}\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            itemId,\r\n                            header as keyof T,\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      /> */}\r\n                      {/* <StyledInput name={`${header}`} onBlur={()=>console.log('lior')}\r\n                      /> */}\r\n                      <form onSubmit={handleSubmit(handleInputChange)}>\r\n                      <StyledInput  \r\n                      defaultValue={String(item[header as keyof T])}\r\n                      {...register(header as any)} \r\n                      />\r\n                      </form>\r\n                    </StyledFlipTableDataBack>\r\n                  ) : (\r\n                    <StyledFlipTableDataFront key={`${itemId}-${header}`}>\r\n                      {String(item[header as keyof T])}\r\n                    </StyledFlipTableDataFront>\r\n                  )\r\n                )}\r\n              </StyleFlipTableRowInner>\r\n            );\r\n          })}\r\n        </StyleFlipTbody>\r\n      </StyledTable>\r\n    </StyledWrapper>\r\n  );\r\n}\r\n\r\nexport default GenericTable;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SACEC,aAAa,EACbC,aAAa,EACbC,WAAW,EACXC,iBAAiB,EACjBC,cAAc,EACdC,sBAAsB,EACtBC,wBAAwB,EACxBC,uBAAuB,EACvBC,WAAW,QACN,uBAAuB;AAC9B,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1C,SAASC,YAAYA,CAAmB;EACtCC,IAAI;EACJC,aAAa;EACbC,SAAS;EACTC;AACoB,CAAC,EAAe;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAM,EAAE,CAAC;EACnD,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAgB,IAAI,CAAC;EACjE,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAA6B,CAAC,CAAC,CAAC;EAE5E,MAAM;IAAC4B,QAAQ;IAAEC,YAAY;IAAEC;EAAS,CAAC,GAAGjB,OAAO,CAAI,CAAC;EACxDZ,SAAS,CAAC,MAAM;IACdsB,YAAY,CAACN,IAAI,CAAC;EACpB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMc,eAAe,GAAG7B,WAAW,CAAE8B,MAAc,IAAK;IACtD,IAAIA,MAAM,KAAKR,UAAU,EAAE;MACzBC,aAAa,CAACD,UAAU,KAAKQ,MAAM,GAAG,IAAI,GAAGA,MAAM,CAAC;IACtD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAIC,IAAQ,IAAK;IACtCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACrB,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,MAAMG,oBAAoB,GAAGnC,WAAW,CACrCoC,IAAO,IAAK;IACX,MAAMC,gBAAgB,GAAG;MAAE,GAAGrB;IAAc,CAAC;IAC7C,MAAMc,MAAM,GAAGb,SAAS,CAACmB,IAAI,CAAC;IAC9B,IAAIC,gBAAgB,CAACP,MAAM,CAAC,EAAE;MAC5B,OAAOO,gBAAgB,CAACP,MAAM,CAAC;IACjC,CAAC,MAAM;MACLO,gBAAgB,CAACP,MAAM,CAAC,GAAGM,IAAI;IACjC;IACAlB,qBAAqB,CAACmB,gBAAgB,CAAC;IACvC,OAAOA,gBAAgB;EACzB,CAAC,EACD,CAACrB,aAAa,EAAEC,SAAS,EAAEC,qBAAqB,CAClD,CAAC;EAED,MAAMoB,YAAY,GAAGC,OAAO,CAAC,MAAM;IACjC,OAAOxB,IAAI,CAACyB,MAAM,GAAG,CAAC,GAAGC,MAAM,CAACC,IAAI,CAAC3B,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;EACpD,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,IAAIK,SAAS,CAACoB,MAAM,KAAK,CAAC,EAAE;IAC1B,oBAAO3B,OAAA,CAACZ,aAAa;MAAA0C,QAAA,EAAqB;IAAU,GAAzBC,IAAI,CAACC,MAAM,CAAC,CAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2B,CAAC;EACtE;EAEA,oBACEpC,OAAA,CAACZ,aAAa;IAACiD,SAAS,EAAC,eAAe;IAAAP,QAAA,eACtC9B,OAAA,CAACV,WAAW;MAAAwC,QAAA,gBACV9B,OAAA;QAAA8B,QAAA,eACE9B,OAAA,CAACX,aAAa;UAAAyC,QAAA,gBACZ9B,OAAA,CAACT,iBAAiB;YAAAuC,QAAA,EAAiB;UAAE,GAAb,QAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAyB,CAAC,EACzDX,YAAY,CAACa,GAAG,CAAEC,MAAM,iBACvBvC,OAAA,CAACT,iBAAiB;YAAAuC,QAAA,EAAeS;UAAM,GAAfA,MAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6B,CAC5D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACRpC,OAAA,CAACR,cAAc;QAAAsC,QAAA,EACZvB,SAAS,CAAC+B,GAAG,CAAEf,IAAI,IAAK;UACvB,MAAMN,MAAM,GAAGb,SAAS,CAACmB,IAAI,CAAC;UAC9B,MAAMiB,SAAS,GAAG/B,UAAU,KAAKQ,MAAM;UACvC,oBACEjB,OAAA,CAACP,sBAAsB;YAErBgD,OAAO,EAAEA,CAAA,KAAMzB,eAAe,CAACC,MAAM,CAAE;YAAAa,QAAA,gBAEvC9B,OAAA;cAAA8B,QAAA,eACE9B,OAAA,CAACH,QAAQ;gBACP6C,EAAE,EAAG,YAAWzB,MAAO,EAAE;gBACzB0B,KAAK,EAAC,EAAE;gBACRC,OAAO,EAAE,CAAC,CAACzC,aAAa,CAACc,MAAM,CAAE;gBACjC4B,QAAQ,EAAEA,CAAA,KAAMvB,oBAAoB,CAACC,IAAI;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,EACJX,YAAY,CAACa,GAAG,CAAEC,MAAM,IACvBC,SAAS,gBACPxC,OAAA,CAACL,uBAAuB;cACtBmD,UAAU,EAAEN,SAAU,CAAC;cAAA;cAAAV,QAAA,eAgBvB9B,OAAA;gBAAM+C,QAAQ,EAAEjC,YAAY,CAACI,iBAAiB,CAAE;gBAAAY,QAAA,eAChD9B,OAAA,CAACJ,WAAW;kBACZoD,YAAY,EAAEC,MAAM,CAAC1B,IAAI,CAACgB,MAAM,CAAY,CAAE;kBAAA,GAC1C1B,QAAQ,CAAC0B,MAAa;gBAAC;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1B;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI;YAAC,GApBD,GAAEnB,MAAO,IAAGsB,MAAO,EAAC;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAqBH,CAAC,gBAE1BpC,OAAA,CAACN,wBAAwB;cAAAoC,QAAA,EACtBmB,MAAM,CAAC1B,IAAI,CAACgB,MAAM,CAAY;YAAC,GADF,GAAEtB,MAAO,IAAGsB,MAAO,EAAC;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE1B,CAE9B,CAAC;UAAA,GA1CInB,MAAM;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA2CW,CAAC;QAE7B,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,GA/D8BL,IAAI,CAACC,MAAM,CAAC,CAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAgE5C,CAAC;AAEpB;AAAC9B,EAAA,CA9HQL,YAAY;EAAA,QAUyBH,OAAO;AAAA;AAAAoD,EAAA,GAV5CjD,YAAY;AAgIrB,eAAeA,YAAY;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
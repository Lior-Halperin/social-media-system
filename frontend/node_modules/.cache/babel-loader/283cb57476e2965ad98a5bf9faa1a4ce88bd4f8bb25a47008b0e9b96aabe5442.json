{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Views\\\\CustomerAddressesView\\\\CustomerAddressesView.tsx\",\n  _s = $RefreshSig$();\nimport useCustomerAddresses from \"src/hooks/useCustomerAddresses\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSelectedCustomerAddresses } from \"src/redux/features/customerAddresses/customerAddressesSlice\";\nimport { useCallback } from \"react\";\nimport MapWithAddresses from \"src/Components/MapWithAddresses/MapWithAddresses\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CustomerAddressesView() {\n  _s();\n  // Utilize the custom hook to access customerAddresses data and functionalities\n  const {\n    customerAddresses\n  } = useCustomerAddresses();\n\n  // Select the customerAddresses slice from the Redux store\n  const selectedAddresses = useSelector(state => state.customerAddresses.selectedCustomerAddresses);\n  const dispatch = useDispatch();\n  const handleSelectedItemsChange = useCallback(newSelectedItems => {\n    dispatch(setSelectedCustomerAddresses(newSelectedItems));\n  }, [dispatch]);\n  const addressesTest = [{\n    id: 1,\n    latitude: 31.960709,\n    longitude: 34.807861,\n    name: \"גלוסקין 16\"\n  }, {\n    id: 1,\n    latitude: 31.960244,\n    longitude: 34.806016,\n    name: \"test2\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MapWithAddresses, {\n      addresses: addressesTest,\n      mapCenterLandmark: [31.962129, 34.805361]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n}\n_s(CustomerAddressesView, \"C4MzPnPhzoy38XgkePPWH6JdGlw=\", false, function () {\n  return [useCustomerAddresses, useSelector, useDispatch];\n});\n_c = CustomerAddressesView;\nexport default CustomerAddressesView;\nvar _c;\n$RefreshReg$(_c, \"CustomerAddressesView\");","map":{"version":3,"names":["useCustomerAddresses","useDispatch","useSelector","setSelectedCustomerAddresses","useCallback","MapWithAddresses","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerAddressesView","_s","customerAddresses","selectedAddresses","state","selectedCustomerAddresses","dispatch","handleSelectedItemsChange","newSelectedItems","addressesTest","id","latitude","longitude","name","children","addresses","mapCenterLandmark","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Views/CustomerAddressesView/CustomerAddressesView.tsx"],"sourcesContent":["import useCustomerAddresses from \"src/hooks/useCustomerAddresses\";\r\nimport IProjectCustomerDetailsModel from \"../../Models/ProjectCustomerDetailsModel\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"src/redux/store\";\r\nimport GenericTable from \"src/Components/GenericTable/GenericTable\";\r\nimport { setSelectedCustomerAddresses } from \"src/redux/features/customerAddresses/customerAddressesSlice\";\r\nimport { useCallback } from \"react\";\r\nimport HoveringButton from \"src/Components/HoveringButton/HoveringButton\";\r\nimport MapWithAddresses from \"src/Components/MapWithAddresses/MapWithAddresses\";\r\n\r\nfunction CustomerAddressesView(): JSX.Element {\r\n  // Utilize the custom hook to access customerAddresses data and functionalities\r\n  const { customerAddresses } = useCustomerAddresses();\r\n\r\n  // Select the customerAddresses slice from the Redux store\r\n  const selectedAddresses = useSelector(\r\n    (state: RootState) => state.customerAddresses.selectedCustomerAddresses\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSelectedItemsChange = useCallback(\r\n    (newSelectedItems: Record<string, IProjectCustomerDetailsModel>) => {\r\n      dispatch(setSelectedCustomerAddresses(newSelectedItems));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const addressesTest = [{id:1,latitude:31.960709, longitude:34.807861, name:\"גלוסקין 16\"},{id:1,latitude:31.960244, longitude:34.806016, name:\"test2\"}]\r\n  return (\r\n    <>\r\n<MapWithAddresses addresses={addressesTest} mapCenterLandmark={[31.962129, 34.805361]}/>\r\n      {/* <GenericTable<IProjectCustomerDetailsModel>\r\n        data={customerAddresses}\r\n        selectedItems={selectedAddresses}\r\n        getItemId={(item) => item.customerId + item.addressId}\r\n        onSelectedItemsChange={handleSelectedItemsChange}\r\n      />\r\n      <HoveringButton<IProjectCustomerDetailsModel>\r\n        data={customerAddresses}\r\n        selectedItems={selectedAddresses}\r\n        getItemId={(item) => item.customerId + item.addressId}\r\n        onSelectedItemsChange={handleSelectedItemsChange}\r\n      /> */}\r\n    </>\r\n  );\r\n}\r\nexport default CustomerAddressesView;\r\n"],"mappings":";;AAAA,OAAOA,oBAAoB,MAAM,gCAAgC;AAEjE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAGtD,SAASC,4BAA4B,QAAQ,6DAA6D;AAC1G,SAASC,WAAW,QAAQ,OAAO;AAEnC,OAAOC,gBAAgB,MAAM,kDAAkD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhF,SAASC,qBAAqBA,CAAA,EAAgB;EAAAC,EAAA;EAC5C;EACA,MAAM;IAAEC;EAAkB,CAAC,GAAGZ,oBAAoB,CAAC,CAAC;;EAEpD;EACA,MAAMa,iBAAiB,GAAGX,WAAW,CAClCY,KAAgB,IAAKA,KAAK,CAACF,iBAAiB,CAACG,yBAChD,CAAC;EAED,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,yBAAyB,GAAGb,WAAW,CAC1Cc,gBAA8D,IAAK;IAClEF,QAAQ,CAACb,4BAA4B,CAACe,gBAAgB,CAAC,CAAC;EAC1D,CAAC,EACD,CAACF,QAAQ,CACX,CAAC;EAED,MAAMG,aAAa,GAAG,CAAC;IAACC,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAC,SAAS;IAAEC,SAAS,EAAC,SAAS;IAAEC,IAAI,EAAC;EAAY,CAAC,EAAC;IAACH,EAAE,EAAC,CAAC;IAACC,QAAQ,EAAC,SAAS;IAAEC,SAAS,EAAC,SAAS;IAAEC,IAAI,EAAC;EAAO,CAAC,CAAC;EACtJ,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACJjB,OAAA,CAACF,gBAAgB;MAACoB,SAAS,EAAEN,aAAc;MAACO,iBAAiB,EAAE,CAAC,SAAS,EAAE,SAAS;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAalF,CAAC;AAEP;AAACnB,EAAA,CApCQD,qBAAqB;EAAA,QAEEV,oBAAoB,EAGxBE,WAAW,EAIpBD,WAAW;AAAA;AAAA8B,EAAA,GATrBrB,qBAAqB;AAqC9B,eAAeA,qBAAqB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
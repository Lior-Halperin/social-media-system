{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Components\\\\GenericTable\\\\GenericTable.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { StyledWrapper, StyleTableRow, StyledTable, StyledTableHeader,\n//   StyleFlipTableRow,\nStyleFlipTbody, StyleFlipTableRowInner, StyledFlipTableDataFront, StyledFlipTableDataBack } from \"./GenericTable.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenericTable({\n  data,\n  selectedItems,\n  getItemId,\n  onSelectedItemsChange\n}) {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [isFlipped, setIsFlipped] = useState(false);\n  useEffect(() => {\n    setTableData(data);\n  }, [data]);\n  const handleCardClick = () => {\n    setIsFlipped(!isFlipped);\n  };\n  const handleCheckboxChange = useCallback(item => {\n    const newCheckboxState = {\n      ...selectedItems\n    };\n    const itemId = getItemId(item);\n    if (newCheckboxState[itemId]) {\n      delete newCheckboxState[itemId];\n    } else {\n      newCheckboxState[itemId] = item;\n    }\n    onSelectedItemsChange(newCheckboxState);\n    return newCheckboxState;\n  }, [selectedItems, getItemId, onSelectedItemsChange]);\n  const tableHeaders = tableData.length > 0 ? Object.keys(tableData[0]) : [];\n  if (tableData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: \"Loading...\"\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n    className: \"generic-table\",\n    children: /*#__PURE__*/_jsxDEV(StyledTable, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(StyleTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableHeader, {\n            children: \"\"\n          }, \"header\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), tableHeaders.map(header => /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyleFlipTbody, {\n        children: [\" \", tableData.map(item => /*#__PURE__*/_jsxDEV(StyleFlipTableRowInner, {\n          isFlipped: isFlipped,\n          children: [\" \", tableHeaders.map(header => isFlipped ? /*#__PURE__*/_jsxDEV(StyledFlipTableDataFront, {\n            children: [\" \", String(item[header])]\n          }, `${getItemId(item)}-${header}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(StyledFlipTableDataBack, {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              children: String(item[header])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 83\n            }, this)\n          }, `${getItemId(item)}-${header}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this) /* flip-card-back */)]\n        }, getItemId(item), true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, Math.random(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(GenericTable, \"SV1nYdrlR0aIv3mgynQw3q+U8Fs=\");\n_c = GenericTable;\nexport default GenericTable;\nvar _c;\n$RefreshReg$(_c, \"GenericTable\");","map":{"version":3,"names":["useState","useEffect","useCallback","StyledWrapper","StyleTableRow","StyledTable","StyledTableHeader","StyleFlipTbody","StyleFlipTableRowInner","StyledFlipTableDataFront","StyledFlipTableDataBack","jsxDEV","_jsxDEV","GenericTable","data","selectedItems","getItemId","onSelectedItemsChange","_s","tableData","setTableData","isFlipped","setIsFlipped","handleCardClick","handleCheckboxChange","item","newCheckboxState","itemId","tableHeaders","length","Object","keys","children","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","className","map","header","String","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Components/GenericTable/GenericTable.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  StyledWrapper,\r\n  StyleTableRow,\r\n  StyledTable,\r\n  StyledTableData,\r\n  StyledTableHeader,\r\n//   StyleFlipTableRow,\r\n  StyleFlipTbody,\r\n  StyleFlipTableRowInner,\r\n  StyledFlipTableDataFront,\r\n  StyledFlipTableDataBack,\r\n} from \"./GenericTable.styled\";\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\n\r\nexport interface GenericTableProps<T extends object> {\r\n  data: T[];\r\n  selectedItems: Record<string, T>;\r\n  getItemId: (item: T) => number;\r\n  onSelectedItemsChange: (selectedItems: Record<string, T>) => void;\r\n}\r\n\r\nfunction GenericTable<T extends object>({\r\n  data,\r\n  selectedItems,\r\n  getItemId,\r\n  onSelectedItemsChange,\r\n}: GenericTableProps<T>): JSX.Element {\r\n  const [tableData, setTableData] = useState<T[]>([]);\r\n\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setTableData(data);\r\n  }, [data]);\r\n  \r\n  const handleCardClick = () => {\r\n    setIsFlipped(!isFlipped);\r\n  };\r\n\r\n  const handleCheckboxChange = useCallback(\r\n    (item: T) => {\r\n      const newCheckboxState = { ...selectedItems };\r\n      const itemId = getItemId(item);\r\n      if (newCheckboxState[itemId]) {\r\n        delete newCheckboxState[itemId];\r\n      } else {\r\n        newCheckboxState[itemId] = item;\r\n      }\r\n      onSelectedItemsChange(newCheckboxState);\r\n      return newCheckboxState;\r\n    },\r\n    [selectedItems, getItemId, onSelectedItemsChange]\r\n  );\r\n\r\n  const tableHeaders = tableData.length > 0 ? Object.keys(tableData[0]) : [];\r\n\r\n  if (tableData.length === 0) {\r\n    return <StyledWrapper key={Math.random()}>Loading...</StyledWrapper>;\r\n  }\r\n\r\n  return (\r\n    <StyledWrapper className=\"generic-table\" key={Math.random()}>\r\n      <StyledTable>\r\n        <thead>\r\n          <StyleTableRow>\r\n            <StyledTableHeader key={\"header\"}>{\"\"}</StyledTableHeader>\r\n            {tableHeaders.map((header) => (\r\n              <StyledTableHeader key={header}>{header}</StyledTableHeader>\r\n            ))}\r\n          </StyleTableRow>\r\n        </thead>\r\n        <StyleFlipTbody> {/* flip-card  */}\r\n          {tableData.map((item) => (\r\n            <StyleFlipTableRowInner isFlipped={isFlipped} key={getItemId(item)}> {/* flip-card-inner */}\r\n              {/* <td>\r\n                <Checkbox\r\n                  id={`checkbox-${getItemId(item)}`}\r\n                  label=\"\"\r\n                  checked={!!selectedItems[getItemId(item)]}\r\n                  onChange={() => handleCheckboxChange(item)}\r\n                />\r\n              </td> */}\r\n              {tableHeaders.map((header) => (\r\n                isFlipped ? (\r\n                    <StyledFlipTableDataFront key={`${getItemId(item)}-${header}`}> {/* flip-card-front */}\r\n                    {String(item[header as keyof T])}\r\n                  </StyledFlipTableDataFront>\r\n                ):(\r\n\r\n                    <StyledFlipTableDataBack key={`${getItemId(item)}-${header}`}><input>{String(item[header as keyof T])}</input></StyledFlipTableDataBack> /* flip-card-back */\r\n                )\r\n                      \r\n                \r\n              ))}\r\n            </StyleFlipTableRowInner>\r\n          ))}\r\n        </StyleFlipTbody>\r\n      </StyledTable>\r\n    </StyledWrapper>\r\n  );\r\n}\r\n\r\nexport default GenericTable;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SACEC,aAAa,EACbC,aAAa,EACbC,WAAW,EAEXC,iBAAiB;AACnB;AACEC,cAAc,EACdC,sBAAsB,EACtBC,wBAAwB,EACxBC,uBAAuB,QAClB,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU/B,SAASC,YAAYA,CAAmB;EACtCC,IAAI;EACJC,aAAa;EACbC,SAAS;EACTC;AACoB,CAAC,EAAe;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAM,EAAE,CAAC;EAEnD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACdmB,YAAY,CAACN,IAAI,CAAC;EACpB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC5BD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMG,oBAAoB,GAAGtB,WAAW,CACrCuB,IAAO,IAAK;IACX,MAAMC,gBAAgB,GAAG;MAAE,GAAGX;IAAc,CAAC;IAC7C,MAAMY,MAAM,GAAGX,SAAS,CAACS,IAAI,CAAC;IAC9B,IAAIC,gBAAgB,CAACC,MAAM,CAAC,EAAE;MAC5B,OAAOD,gBAAgB,CAACC,MAAM,CAAC;IACjC,CAAC,MAAM;MACLD,gBAAgB,CAACC,MAAM,CAAC,GAAGF,IAAI;IACjC;IACAR,qBAAqB,CAACS,gBAAgB,CAAC;IACvC,OAAOA,gBAAgB;EACzB,CAAC,EACD,CAACX,aAAa,EAAEC,SAAS,EAAEC,qBAAqB,CAClD,CAAC;EAED,MAAMW,YAAY,GAAGT,SAAS,CAACU,MAAM,GAAG,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACZ,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;EAE1E,IAAIA,SAAS,CAACU,MAAM,KAAK,CAAC,EAAE;IAC1B,oBAAOjB,OAAA,CAACT,aAAa;MAAA6B,QAAA,EAAqB;IAAU,GAAzBC,IAAI,CAACC,MAAM,CAAC,CAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2B,CAAC;EACtE;EAEA,oBACE1B,OAAA,CAACT,aAAa;IAACoC,SAAS,EAAC,eAAe;IAAAP,QAAA,eACtCpB,OAAA,CAACP,WAAW;MAAA2B,QAAA,gBACVpB,OAAA;QAAAoB,QAAA,eACEpB,OAAA,CAACR,aAAa;UAAA4B,QAAA,gBACZpB,OAAA,CAACN,iBAAiB;YAAA0B,QAAA,EAAiB;UAAE,GAAb,QAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAyB,CAAC,EACzDV,YAAY,CAACY,GAAG,CAAEC,MAAM,iBACvB7B,OAAA,CAACN,iBAAiB;YAAA0B,QAAA,EAAeS;UAAM,GAAfA,MAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6B,CAC5D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACR1B,OAAA,CAACL,cAAc;QAAAyB,QAAA,GAAC,GAAC,EACdb,SAAS,CAACqB,GAAG,CAAEf,IAAI,iBAClBb,OAAA,CAACJ,sBAAsB;UAACa,SAAS,EAAEA,SAAU;UAAAW,QAAA,GAAuB,GAAC,EASlEJ,YAAY,CAACY,GAAG,CAAEC,MAAM,IACvBpB,SAAS,gBACLT,OAAA,CAACH,wBAAwB;YAAAuB,QAAA,GAAsC,GAAC,EAC/DU,MAAM,CAACjB,IAAI,CAACgB,MAAM,CAAY,CAAC;UAAA,GADA,GAAEzB,SAAS,CAACS,IAAI,CAAE,IAAGgB,MAAO,EAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAErC,CAAC,gBAGzB1B,OAAA,CAACF,uBAAuB;YAAAsB,QAAA,eAAsCpB,OAAA;cAAAoB,QAAA,EAAQU,MAAM,CAACjB,IAAI,CAACgB,MAAM,CAAY;YAAC;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC,GAA/E,GAAEtB,SAAS,CAACS,IAAI,CAAE,IAAGgB,MAAO,EAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA2E,CAAC,CAAC,oBAI9I,CAAC;QAAA,GApB+CtB,SAAS,CAACS,IAAI,CAAC;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqB1C,CACzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,GApC8BL,IAAI,CAACC,MAAM,CAAC,CAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAqC5C,CAAC;AAEpB;AAACpB,EAAA,CA/EQL,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAiFrB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Components\\\\SocialCustomerTable\\\\SocialCustomerTable.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { StyledWrapper, StyleTableRow, StyledTable, StyledTableData, StyledTableHeader } from \"./SocialCustomerTable.styled\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport { useDispatch } from \"react-redux\";\nimport { setSelectedCustomer } from \"src/redux/features/socialCustomer/socialCustomerSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SocialCustomerTable({\n  socialCustomer,\n  selectedCustomer\n}) {\n  _s();\n  const [socialCustomerState, setSocialCustomerState] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setSocialCustomerState(socialCustomer);\n  }, [socialCustomer]);\n  const handleCheckboxChange = useCallback(customer => {\n    // Wrapped the handleCheckboxChange in useCallback to prevent unnecessary recreations of the function on each render.\n    const newCheckboxState = {\n      ...selectedCustomer\n    };\n    if (newCheckboxState[customer.customerId]) {\n      delete newCheckboxState[customer.customerId];\n    } else {\n      newCheckboxState[customer.customerId] = customer;\n    }\n    dispatch(setSelectedCustomer(newCheckboxState));\n    return newCheckboxState;\n  }, [dispatch, selectedCustomer]);\n  const tableHeaders = socialCustomerState.length > 0 ? Object.keys(socialCustomerState[0]) : [];\n  if (socialCustomerState.length === 0) {\n    return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: \"Loading Social Customers...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n    className: \"SocialCustomer-table\",\n    children: /*#__PURE__*/_jsxDEV(StyledTable, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(StyleTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableHeader, {\n            children: \"\"\n          }, \"header\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), tableHeaders.map(header => /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: socialCustomerState.map(socialCustomer => /*#__PURE__*/_jsxDEV(StyleTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              id: `checkbox-${socialCustomer.customerId}`,\n              label: \"\"\n              //   checked={!!checkedState[socialCustomer.customerId]} // The !! operator is a shorthand way of converting a value to boolean.\n              ,\n              checked: !!selectedCustomer[socialCustomer.customerId] // The !! operator is a shorthand way of converting a value to boolean.\n              ,\n              onChange: () => handleCheckboxChange(socialCustomer)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), tableHeaders.map(header => /*#__PURE__*/_jsxDEV(StyledTableData, {\n            children: socialCustomer[header]\n          }, `${socialCustomer.customerId}-${header}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this))]\n        }, socialCustomer.customerId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(SocialCustomerTable, \"UH/1ILhn5p2w5UEF+Jm1yPsB1Tk=\", false, function () {\n  return [useDispatch];\n});\n_c = SocialCustomerTable;\nexport default SocialCustomerTable;\nvar _c;\n$RefreshReg$(_c, \"SocialCustomerTable\");","map":{"version":3,"names":["useState","useEffect","useCallback","StyledWrapper","StyleTableRow","StyledTable","StyledTableData","StyledTableHeader","Checkbox","useDispatch","setSelectedCustomer","jsxDEV","_jsxDEV","SocialCustomerTable","socialCustomer","selectedCustomer","_s","socialCustomerState","setSocialCustomerState","dispatch","handleCheckboxChange","customer","newCheckboxState","customerId","tableHeaders","length","Object","keys","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","header","id","label","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Components/SocialCustomerTable/SocialCustomerTable.tsx"],"sourcesContent":["import { ISocialCustomerModel } from \"../../Models/SocialCustomerModel\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  StyledWrapper,\r\n  StyleTableRow,\r\n  StyledTable,\r\n  StyledTableData,\r\n  StyledTableHeader,\r\n} from \"./SocialCustomerTable.styled\";\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport { setSelectedCustomer } from \"src/redux/features/socialCustomer/socialCustomerSlice\";\r\n\r\ninterface SocialCustomerTableProps {\r\n  socialCustomer: ISocialCustomerModel[];\r\n  selectedCustomer: Record<string, ISocialCustomerModel>;\r\n}\r\n\r\nfunction SocialCustomerTable({socialCustomer,selectedCustomer}: SocialCustomerTableProps): JSX.Element {\r\n\r\n  const [socialCustomerState, setSocialCustomerState] = useState<ISocialCustomerModel[]>([]);\r\n  const dispatch = useDispatch();\r\n \r\n  useEffect(() => {\r\n      setSocialCustomerState(socialCustomer);\r\n  }, [socialCustomer]);\r\n\r\n  const handleCheckboxChange = useCallback((customer: ISocialCustomerModel) => {\r\n    // Wrapped the handleCheckboxChange in useCallback to prevent unnecessary recreations of the function on each render.\r\n    const newCheckboxState = { ...selectedCustomer };\r\n    if (newCheckboxState[customer.customerId]) {\r\n      delete newCheckboxState[customer.customerId];\r\n    } else {\r\n      newCheckboxState[customer.customerId] = customer;\r\n    }\r\n    dispatch(setSelectedCustomer(newCheckboxState))\r\n    return newCheckboxState;\r\n  }, [dispatch,selectedCustomer]);\r\n\r\n  const tableHeaders =\r\n    socialCustomerState.length > 0 ? Object.keys(socialCustomerState[0]) : [];\r\n\r\n  if (socialCustomerState.length === 0) {\r\n    return <StyledWrapper>Loading Social Customers...</StyledWrapper>;\r\n  }\r\n  return (\r\n    <StyledWrapper className=\"SocialCustomer-table\">\r\n      <StyledTable>\r\n        <thead>\r\n          <StyleTableRow>\r\n            <StyledTableHeader key={\"header\"}>{\"\"}</StyledTableHeader>\r\n\r\n            {tableHeaders.map((header) => (\r\n              <StyledTableHeader key={header}>{header}</StyledTableHeader>\r\n            ))}\r\n          </StyleTableRow>\r\n        </thead>\r\n        <tbody>\r\n          {socialCustomerState.map((socialCustomer) => (\r\n            <StyleTableRow key={socialCustomer.customerId}>\r\n              <td>\r\n                <Checkbox\r\n                  id={`checkbox-${socialCustomer.customerId}`}\r\n                  label=\"\"\r\n                //   checked={!!checkedState[socialCustomer.customerId]} // The !! operator is a shorthand way of converting a value to boolean.\r\n                  checked={!!selectedCustomer[socialCustomer.customerId]} // The !! operator is a shorthand way of converting a value to boolean.\r\n                  onChange={() => handleCheckboxChange(socialCustomer)}\r\n                />\r\n              </td>\r\n              {tableHeaders.map((header) => (\r\n                <StyledTableData key={`${socialCustomer.customerId}-${header}`}>\r\n                  {socialCustomer[header as keyof ISocialCustomerModel]}\r\n                </StyledTableData>\r\n              ))}\r\n            </StyleTableRow>\r\n          ))}\r\n        </tbody>\r\n      </StyledTable>\r\n    </StyledWrapper>\r\n  );\r\n}\r\n\r\nexport default SocialCustomerTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
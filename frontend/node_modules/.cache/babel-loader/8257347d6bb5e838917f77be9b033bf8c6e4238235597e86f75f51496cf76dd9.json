{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Components\\\\GenericTable\\\\GenericTable.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { StyledWrapper, StyleTableRow, StyledTable, StyledTableHeader, StyleFlipTbody, StyleFlipTableRowInner, StyledFlipTableDataFront, StyledFlipTableDataBack, StyledInput } from \"./GenericTable.styled\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenericTable({\n  data,\n  selectedItems,\n  getItemId,\n  onSelectedItemsChange\n}) {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [flippedRow, setFlippedRow] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm();\n  useEffect(() => {\n    setTableData(data);\n  }, [data]);\n  const handleCardClick = useCallback(itemId => {\n    if (itemId !== flippedRow) {\n      setFlippedRow(flippedRow === itemId ? null : itemId);\n    }\n  }, []);\n  const handleInputChange = send => {\n    console.log(send);\n  };\n\n  //   const handleInputChange = (itemId: number, field: keyof T, value: string) => {\n  //     console.log(itemId, field, value);\n  //     setEditedData((prevData) => ({\n  //       ...prevData,\n  //       [itemId]: {\n  //         ...prevData[itemId],\n  //         [field]: value,\n  //       },\n  //     }));\n  //   };\n\n  const handleCheckboxChange = useCallback(item => {\n    const newCheckboxState = {\n      ...selectedItems\n    };\n    const itemId = getItemId(item);\n    if (newCheckboxState[itemId]) {\n      delete newCheckboxState[itemId];\n    } else {\n      newCheckboxState[itemId] = item;\n    }\n    onSelectedItemsChange(newCheckboxState);\n    return newCheckboxState;\n  }, [selectedItems, getItemId, onSelectedItemsChange]);\n  const tableHeaders = useMemo(() => {\n    return data.length > 0 ? Object.keys(data[0]) : [];\n  }, [data]);\n  if (data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n    className: \"generic-table\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(StyledTable, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(StyleTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableHeader, {\n              children: \"\"\n            }, \"header\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this), tableHeaders.map(header => /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n              children: header\n            }, header, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StyleFlipTbody, {\n          children: tableData.map((item, rowIndex) => {\n            const itemId = getItemId(item);\n            const isFlipped = flippedRow === itemId;\n            return /*#__PURE__*/_jsxDEV(StyleFlipTableRowInner, {\n              onClick: () => handleCardClick(itemId),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: `checkbox-${itemId}`,\n                  label: \"\",\n                  checked: !!selectedItems[itemId],\n                  onChange: () => handleCheckboxChange(item)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), tableHeaders.map((header, rowIndex) => isFlipped ? /*#__PURE__*/_jsxDEV(StyledFlipTableDataBack, {\n                $isflipped: isFlipped // Use $ prefix for transient props\n                ,\n                children: /*#__PURE__*/_jsxDEV(StyledInput, {\n                  defaultValue: String(item[header]),\n                  ...register(`${rowIndex}.${header}`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 45\n                }, this)\n              }, `${rowIndex}-${header}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(StyledFlipTableDataFront, {\n                children: String(item[header])\n              }, `${itemId}-${header}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this))]\n            }, rowIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(GenericTable, \"wucFP7ZDG2eDzmlgzMGxbbNbETw=\", false, function () {\n  return [useForm];\n});\n_c = GenericTable;\nexport default GenericTable;\nvar _c;\n$RefreshReg$(_c, \"GenericTable\");","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","StyledWrapper","StyleTableRow","StyledTable","StyledTableHeader","StyleFlipTbody","StyleFlipTableRowInner","StyledFlipTableDataFront","StyledFlipTableDataBack","StyledInput","Checkbox","useForm","jsxDEV","_jsxDEV","GenericTable","data","selectedItems","getItemId","onSelectedItemsChange","_s","tableData","setTableData","flippedRow","setFlippedRow","editedData","setEditedData","register","handleSubmit","formState","handleCardClick","itemId","handleInputChange","send","console","log","handleCheckboxChange","item","newCheckboxState","tableHeaders","length","Object","keys","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","header","rowIndex","isFlipped","onClick","id","label","checked","onChange","$isflipped","defaultValue","String","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Components/GenericTable/GenericTable.tsx"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport {\r\n  StyledWrapper,\r\n  StyleTableRow,\r\n  StyledTable,\r\n  StyledTableHeader,\r\n  StyleFlipTbody,\r\n  StyleFlipTableRowInner,\r\n  StyledFlipTableDataFront,\r\n  StyledFlipTableDataBack,\r\n  StyledInput,\r\n} from \"./GenericTable.styled\";\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { send } from \"process\";\r\n\r\nexport interface GenericTableProps<T extends object> {\r\n  data: T[];\r\n  selectedItems: Record<string, T>;\r\n  getItemId: (item: T) => number;\r\n  onSelectedItemsChange: (selectedItems: Record<string, T>) => void;\r\n}\r\n\r\nfunction GenericTable<T extends object>({\r\n  data,\r\n  selectedItems,\r\n  getItemId,\r\n  onSelectedItemsChange,\r\n}: GenericTableProps<T>): JSX.Element {\r\n  const [tableData, setTableData] = useState<T[]>([]);\r\n  const [flippedRow, setFlippedRow] = useState<number | null>(null);\r\n  const [editedData, setEditedData] = useState<Record<number, Partial<T>>>({});\r\n\r\n  const {register, handleSubmit, formState} = useForm<T>()\r\n  useEffect(() => {\r\n    setTableData(data);\r\n  }, [data]);\r\n\r\n  const handleCardClick = useCallback((itemId: number) => {\r\n    if (itemId !== flippedRow) {\r\n      setFlippedRow(flippedRow === itemId ? null : itemId);\r\n    }\r\n  }, []);\r\n\r\n  const handleInputChange = (send:any) => {\r\n    console.log(send);\r\n};\r\n\r\n//   const handleInputChange = (itemId: number, field: keyof T, value: string) => {\r\n//     console.log(itemId, field, value);\r\n//     setEditedData((prevData) => ({\r\n//       ...prevData,\r\n//       [itemId]: {\r\n//         ...prevData[itemId],\r\n//         [field]: value,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n  const handleCheckboxChange = useCallback(\r\n    (item: T) => {\r\n      const newCheckboxState = { ...selectedItems };\r\n      const itemId = getItemId(item);\r\n      if (newCheckboxState[itemId]) {\r\n        delete newCheckboxState[itemId];\r\n      } else {\r\n        newCheckboxState[itemId] = item;\r\n      }\r\n      onSelectedItemsChange(newCheckboxState);\r\n      return newCheckboxState;\r\n    },\r\n    [selectedItems, getItemId, onSelectedItemsChange]\r\n  );\r\n\r\n  const tableHeaders = useMemo(() => {\r\n    return data.length > 0 ? Object.keys(data[0]) : [];\r\n  }, [data]);\r\n  \r\n  if (data.length === 0) {\r\n    return <StyledWrapper>Loading...</StyledWrapper>;\r\n  }\r\n\r\n  return (\r\n    <StyledWrapper className=\"generic-table\">\r\n        <form>\r\n\r\n      <StyledTable>\r\n        <thead>\r\n          <StyleTableRow>\r\n            <StyledTableHeader key={\"header\"}>{\"\"}</StyledTableHeader>\r\n            {tableHeaders.map((header) => (\r\n              <StyledTableHeader key={header}>{header}</StyledTableHeader>\r\n            ))}\r\n          </StyleTableRow>\r\n        </thead>\r\n        <StyleFlipTbody>\r\n          {tableData.map((item,rowIndex ) => {\r\n            const itemId = getItemId(item);\r\n            const isFlipped = flippedRow === itemId;\r\n            return (\r\n              <StyleFlipTableRowInner\r\n                key={rowIndex}\r\n                onClick={() => handleCardClick(itemId)}\r\n              >\r\n                <td>\r\n                  <Checkbox\r\n                    id={`checkbox-${itemId}`}\r\n                    label=\"\"\r\n                    checked={!!selectedItems[itemId]}\r\n                    onChange={() => handleCheckboxChange(item)}\r\n                  />\r\n                </td>\r\n                {tableHeaders.map((header,rowIndex) =>\r\n                  isFlipped ? (\r\n                    <StyledFlipTableDataBack\r\n                      $isflipped={isFlipped} // Use $ prefix for transient props\r\n                      key={`${rowIndex}-${header}`}\r\n                    >\r\n                                            <StyledInput\r\n                      defaultValue={String(item[header as keyof T])}\r\n                      {...register(`${rowIndex}.${header}` as const)}\r\n                    />\r\n                      {/* <StyledInput\r\n                        type=\"text\"\r\n                        value={String(item[header as keyof T])}\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            itemId,\r\n                            header as keyof T,\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      /> */}\r\n                      {/* <StyledInput name={`${header}`} onBlur={()=>console.log('lior')}\r\n                      /> */}\r\n                      {/* <StyledInput  \r\n                      defaultValue={String(item[header as keyof T])}\r\n                      {...register(header as any)} \r\n                      /> */}\r\n                    </StyledFlipTableDataBack>\r\n                  ) : (\r\n                    <StyledFlipTableDataFront key={`${itemId}-${header}`}>\r\n                      {String(item[header as keyof T])}\r\n                    </StyledFlipTableDataFront>\r\n                  )\r\n                )}\r\n              </StyleFlipTableRowInner>\r\n            );\r\n          })}\r\n        </StyleFlipTbody>\r\n      </StyledTable>\r\n      </form>\r\n\r\n    </StyledWrapper>\r\n  );\r\n}\r\n\r\nexport default GenericTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
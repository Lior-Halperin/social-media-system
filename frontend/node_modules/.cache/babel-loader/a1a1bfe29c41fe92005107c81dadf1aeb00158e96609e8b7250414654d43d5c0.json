{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Components\\\\GenericTable\\\\GenericTable.tsx\",\n  _s = $RefreshSig$();\n// GenericTable.tsx\nimport { useState, useEffect, useCallback, useRef } from \"react\";\nimport { StyledWrapper, StyleTableRow, StyledTable, StyledTableData, StyledTableHeader, BlurredOverlay, EditableRow } from \"./GenericTable.styled\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenericTable({\n  data,\n  selectedItems,\n  getItemId,\n  onSelectedItemsChange\n}) {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [editingRow, setEditingRow] = useState(null);\n  const [editedValue, setEditedValue] = useState({});\n  const inputRef = useRef(null);\n  useEffect(() => {\n    setTableData(data);\n  }, [data]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (inputRef.current && !inputRef.current.contains(event.target)) {\n        setEditingRow(null);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  const handleCheckboxChange = useCallback(item => {\n    const newCheckboxState = {\n      ...selectedItems\n    };\n    const itemId = getItemId(item);\n    if (newCheckboxState[itemId]) {\n      delete newCheckboxState[itemId];\n    } else {\n      newCheckboxState[itemId] = item;\n    }\n    onSelectedItemsChange(newCheckboxState);\n    return newCheckboxState;\n  }, [selectedItems, getItemId, onSelectedItemsChange]);\n  const handleRowClick = item => {\n    const itemId = getItemId(item);\n    setEditingRow(itemId);\n    const initialEditedValue = {};\n    Object.keys(item).forEach(key => {\n      initialEditedValue[key] = String(item[key]);\n    });\n    setEditedValue(initialEditedValue);\n  };\n  const handleInputChange = (key, value) => {\n    setEditedValue(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const tableHeaders = tableData.length > 0 ? Object.keys(tableData[0]) : [];\n  if (tableData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: \"Loading...\"\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n    className: \"generic-table\",\n    children: [editingRow !== null && /*#__PURE__*/_jsxDEV(BlurredOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(StyledTable, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(StyleTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableHeader, {\n            children: \"\"\n          }, \"header\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), tableHeaders.map(header => /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map(item => {\n          const itemId = getItemId(item);\n          const isEditing = editingRow === itemId;\n          return /*#__PURE__*/_jsxDEV(StyleTableRow, {\n            onClick: () => handleRowClick(item),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                id: `checkbox-${itemId}`,\n                label: \"\",\n                checked: !!selectedItems[itemId],\n                onChange: () => handleCheckboxChange(item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), tableHeaders.map(header => /*#__PURE__*/_jsxDEV(StyledTableData, {\n              children: isEditing ? /*#__PURE__*/_jsxDEV(EditableRow, {\n                ref: inputRef,\n                value: editedValue[header],\n                onChange: e => handleInputChange(header, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 23\n              }, this) : String(item[header])\n            }, `${itemId}-${header}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this))]\n          }, itemId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, Math.random(), true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(GenericTable, \"fBcASssZH8QEPZ88F+EI+Cxjoe0=\");\n_c = GenericTable;\nexport default GenericTable;\nvar _c;\n$RefreshReg$(_c, \"GenericTable\");","map":{"version":3,"names":["useState","useEffect","useCallback","useRef","StyledWrapper","StyleTableRow","StyledTable","StyledTableData","StyledTableHeader","BlurredOverlay","EditableRow","Checkbox","jsxDEV","_jsxDEV","GenericTable","data","selectedItems","getItemId","onSelectedItemsChange","_s","tableData","setTableData","editingRow","setEditingRow","editedValue","setEditedValue","inputRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleCheckboxChange","item","newCheckboxState","itemId","handleRowClick","initialEditedValue","Object","keys","forEach","key","String","handleInputChange","value","prev","tableHeaders","length","children","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","className","map","header","isEditing","onClick","id","label","checked","onChange","ref","e","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Components/GenericTable/GenericTable.tsx"],"sourcesContent":["// GenericTable.tsx\r\nimport { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport {\r\n  StyledWrapper,\r\n  StyleTableRow,\r\n  StyledTable,\r\n  StyledTableData,\r\n  StyledTableHeader,\r\n  BlurredOverlay,\r\n  EditableRow,\r\n} from \"./GenericTable.styled\";\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\n\r\nexport interface GenericTableProps<T extends object> {\r\n  data: T[];\r\n  selectedItems: Record<string, T>;\r\n  getItemId: (item: T) => number;\r\n  onSelectedItemsChange: (selectedItems: Record<string, T>) => void;\r\n}\r\n\r\nfunction GenericTable<T extends object>({\r\n  data,\r\n  selectedItems,\r\n  getItemId,\r\n  onSelectedItemsChange,\r\n}: GenericTableProps<T>): JSX.Element {\r\n  const [tableData, setTableData] = useState<T[]>([]);\r\n  const [editingRow, setEditingRow] = useState<number | null>(null);\r\n  const [editedValue, setEditedValue] = useState<Record<string, string>>({});\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    setTableData(data);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (inputRef.current && !inputRef.current.contains(event.target as Node)) {\r\n        setEditingRow(null);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const handleCheckboxChange = useCallback(\r\n    (item: T) => {\r\n      const newCheckboxState = { ...selectedItems };\r\n      const itemId = getItemId(item);\r\n      if (newCheckboxState[itemId]) {\r\n        delete newCheckboxState[itemId];\r\n      } else {\r\n        newCheckboxState[itemId] = item;\r\n      }\r\n      onSelectedItemsChange(newCheckboxState);\r\n      return newCheckboxState;\r\n    },\r\n    [selectedItems, getItemId, onSelectedItemsChange]\r\n  );\r\n\r\n  const handleRowClick = (item: T) => {\r\n    const itemId = getItemId(item);\r\n    setEditingRow(itemId);\r\n    const initialEditedValue: Record<string, string> = {};\r\n    Object.keys(item).forEach((key) => {\r\n      initialEditedValue[key] = String(item[key as keyof T]);\r\n    });\r\n    setEditedValue(initialEditedValue);\r\n  };\r\n\r\n  const handleInputChange = (key: string, value: string) => {\r\n    setEditedValue((prev) => ({\r\n      ...prev,\r\n      [key]: value,\r\n    }));\r\n  };\r\n\r\n  const tableHeaders = tableData.length > 0 ? Object.keys(tableData[0]) : [];\r\n\r\n  if (tableData.length === 0) {\r\n    return <StyledWrapper key={Math.random()}>Loading...</StyledWrapper>;\r\n  }\r\n\r\n  return (\r\n    <StyledWrapper className=\"generic-table\" key={Math.random()}>\r\n      {editingRow !== null && <BlurredOverlay />}\r\n      <StyledTable>\r\n        <thead>\r\n          <StyleTableRow>\r\n            <StyledTableHeader key={\"header\"}>{\"\"}</StyledTableHeader>\r\n            {tableHeaders.map((header) => (\r\n              <StyledTableHeader key={header}>{header}</StyledTableHeader>\r\n            ))}\r\n          </StyleTableRow>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((item) => {\r\n            const itemId = getItemId(item);\r\n            const isEditing = editingRow === itemId;\r\n            return (\r\n              <StyleTableRow key={itemId} onClick={() => handleRowClick(item)}>\r\n                <td>\r\n                  <Checkbox\r\n                    id={`checkbox-${itemId}`}\r\n                    label=\"\"\r\n                    checked={!!selectedItems[itemId]}\r\n                    onChange={() => handleCheckboxChange(item)}\r\n                  />\r\n                </td>\r\n                {tableHeaders.map((header) => (\r\n                  <StyledTableData key={`${itemId}-${header}`}>\r\n                    {isEditing ? (\r\n                      <EditableRow\r\n                        ref={inputRef}\r\n                        value={editedValue[header]}\r\n                        onChange={(e) =>\r\n                          handleInputChange(header, e.target.value)\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      String(item[header as keyof T])\r\n                    )}\r\n                  </StyledTableData>\r\n                ))}\r\n              </StyleTableRow>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </StyledTable>\r\n    </StyledWrapper>\r\n  );\r\n}\r\n\r\nexport default GenericTable;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Components\\\\GenericTable\\\\GenericTable.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { StyledWrapper, StyleTableRow, StyledTable, StyledTableHeader, StyleFlipTbody, StyleFlipTableRowInner, StyledFlipTableDataFront, StyledFlipTableDataBack, StyledInput } from \"./GenericTable.styled\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport { useForm } from \"react-hook-form\";\nimport { send } from \"process\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenericTable({\n  data,\n  selectedItems,\n  getItemId,\n  onSelectedItemsChange\n}) {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [flippedRow, setFlippedRow] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm();\n  useEffect(() => {\n    setTableData(data);\n  }, [data]);\n  const handleCardClick = useCallback(itemId => {\n    if (itemId !== flippedRow) {\n      setFlippedRow(flippedRow === itemId ? null : itemId);\n    }\n  }, []);\n  const handleInputChange = send => {\n    console.log(itemId, field, value);\n    setEditedData(prevData => ({\n      ...prevData,\n      [itemId]: {\n        ...prevData[itemId],\n        [field]: value\n      }\n    }));\n  };\n\n  //   const handleInputChange = (itemId: number, field: keyof T, value: string) => {\n  //     console.log(itemId, field, value);\n  //     setEditedData((prevData) => ({\n  //       ...prevData,\n  //       [itemId]: {\n  //         ...prevData[itemId],\n  //         [field]: value,\n  //       },\n  //     }));\n  //   };\n\n  const handleCheckboxChange = useCallback(item => {\n    const newCheckboxState = {\n      ...selectedItems\n    };\n    const itemId = getItemId(item);\n    if (newCheckboxState[itemId]) {\n      delete newCheckboxState[itemId];\n    } else {\n      newCheckboxState[itemId] = item;\n    }\n    onSelectedItemsChange(newCheckboxState);\n    return newCheckboxState;\n  }, [selectedItems, getItemId, onSelectedItemsChange]);\n  const tableHeaders = tableData.length > 0 ? Object.keys(tableData[0]) : [];\n  if (tableData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: \"Loading...\"\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n    className: \"generic-table\",\n    children: /*#__PURE__*/_jsxDEV(StyledTable, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(StyleTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableHeader, {\n            children: \"\"\n          }, \"header\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), tableHeaders.map(header => /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyleFlipTbody, {\n        children: tableData.map(item => {\n          const itemId = getItemId(item);\n          const isFlipped = flippedRow === itemId;\n          return /*#__PURE__*/_jsxDEV(StyleFlipTableRowInner, {\n            onClick: () => handleCardClick(itemId),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                id: `checkbox-${itemId}`,\n                label: \"\",\n                checked: !!selectedItems[itemId],\n                onChange: () => handleCheckboxChange(item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), tableHeaders.map(header => isFlipped ? /*#__PURE__*/_jsxDEV(StyledFlipTableDataBack, {\n              $isflipped: isFlipped // Use $ prefix for transient props\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: onsubmit(handleInputChange(send)),\n                children: /*#__PURE__*/_jsxDEV(StyledInput, {\n                  name: `${header}`,\n                  onBlur: () => console.log('lior')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 23\n              }, this)\n            }, `${itemId}-${header}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(StyledFlipTableDataFront, {\n              children: String(item[header])\n            }, `${itemId}-${header}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this))]\n          }, itemId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, Math.random(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(GenericTable, \"4kIP5X2n2Q07bUYVkpDGlhq4FFo=\", false, function () {\n  return [useForm];\n});\n_c = GenericTable;\nexport default GenericTable;\nvar _c;\n$RefreshReg$(_c, \"GenericTable\");","map":{"version":3,"names":["useState","useEffect","useCallback","StyledWrapper","StyleTableRow","StyledTable","StyledTableHeader","StyleFlipTbody","StyleFlipTableRowInner","StyledFlipTableDataFront","StyledFlipTableDataBack","StyledInput","Checkbox","useForm","send","jsxDEV","_jsxDEV","GenericTable","data","selectedItems","getItemId","onSelectedItemsChange","_s","tableData","setTableData","flippedRow","setFlippedRow","editedData","setEditedData","register","handleSubmit","formState","handleCardClick","itemId","handleInputChange","console","log","field","value","prevData","handleCheckboxChange","item","newCheckboxState","tableHeaders","length","Object","keys","children","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","className","map","header","isFlipped","onClick","id","label","checked","onChange","$isflipped","onSubmit","onsubmit","name","onBlur","String","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Components/GenericTable/GenericTable.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  StyledWrapper,\r\n  StyleTableRow,\r\n  StyledTable,\r\n  StyledTableHeader,\r\n  StyleFlipTbody,\r\n  StyleFlipTableRowInner,\r\n  StyledFlipTableDataFront,\r\n  StyledFlipTableDataBack,\r\n  StyledInput,\r\n} from \"./GenericTable.styled\";\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { send } from \"process\";\r\n\r\nexport interface GenericTableProps<T extends object> {\r\n  data: T[];\r\n  selectedItems: Record<string, T>;\r\n  getItemId: (item: T) => number;\r\n  onSelectedItemsChange: (selectedItems: Record<string, T>) => void;\r\n}\r\n\r\nfunction GenericTable<T extends object>({\r\n  data,\r\n  selectedItems,\r\n  getItemId,\r\n  onSelectedItemsChange,\r\n}: GenericTableProps<T>): JSX.Element {\r\n  const [tableData, setTableData] = useState<T[]>([]);\r\n  const [flippedRow, setFlippedRow] = useState<number | null>(null);\r\n  const [editedData, setEditedData] = useState<Record<number, Partial<T>>>({});\r\n\r\n  const {register, handleSubmit, formState} = useForm<T>()\r\n  useEffect(() => {\r\n    setTableData(data);\r\n  }, [data]);\r\n\r\n  const handleCardClick = useCallback((itemId: number) => {\r\n    if (itemId !== flippedRow) {\r\n      setFlippedRow(flippedRow === itemId ? null : itemId);\r\n    }\r\n  }, []);\r\n\r\n  const handleInputChange = (send) => {\r\n    console.log(itemId, field, value);\r\n    setEditedData((prevData) => ({\r\n      ...prevData,\r\n      [itemId]: {\r\n        ...prevData[itemId],\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n//   const handleInputChange = (itemId: number, field: keyof T, value: string) => {\r\n//     console.log(itemId, field, value);\r\n//     setEditedData((prevData) => ({\r\n//       ...prevData,\r\n//       [itemId]: {\r\n//         ...prevData[itemId],\r\n//         [field]: value,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n  const handleCheckboxChange = useCallback(\r\n    (item: T) => {\r\n      const newCheckboxState = { ...selectedItems };\r\n      const itemId = getItemId(item);\r\n      if (newCheckboxState[itemId]) {\r\n        delete newCheckboxState[itemId];\r\n      } else {\r\n        newCheckboxState[itemId] = item;\r\n      }\r\n      onSelectedItemsChange(newCheckboxState);\r\n      return newCheckboxState;\r\n    },\r\n    [selectedItems, getItemId, onSelectedItemsChange]\r\n  );\r\n\r\n  const tableHeaders = tableData.length > 0 ? Object.keys(tableData[0]) : [];\r\n\r\n  if (tableData.length === 0) {\r\n    return <StyledWrapper key={Math.random()}>Loading...</StyledWrapper>;\r\n  }\r\n\r\n  return (\r\n    <StyledWrapper className=\"generic-table\" key={Math.random()}>\r\n      <StyledTable>\r\n        <thead>\r\n          <StyleTableRow>\r\n            <StyledTableHeader key={\"header\"}>{\"\"}</StyledTableHeader>\r\n            {tableHeaders.map((header) => (\r\n              <StyledTableHeader key={header}>{header}</StyledTableHeader>\r\n            ))}\r\n          </StyleTableRow>\r\n        </thead>\r\n        <StyleFlipTbody>\r\n          {tableData.map((item) => {\r\n            const itemId = getItemId(item);\r\n            const isFlipped = flippedRow === itemId;\r\n            return (\r\n              <StyleFlipTableRowInner\r\n                key={itemId}\r\n                onClick={() => handleCardClick(itemId)}\r\n              >\r\n                <td>\r\n                  <Checkbox\r\n                    id={`checkbox-${itemId}`}\r\n                    label=\"\"\r\n                    checked={!!selectedItems[itemId]}\r\n                    onChange={() => handleCheckboxChange(item)}\r\n                  />\r\n                </td>\r\n                {tableHeaders.map((header) =>\r\n                  isFlipped ? (\r\n                    <StyledFlipTableDataBack\r\n                      $isflipped={isFlipped} // Use $ prefix for transient props\r\n                      key={`${itemId}-${header}`}\r\n                    >\r\n                      {/* <StyledInput\r\n                        type=\"text\"\r\n                        value={String(item[header as keyof T])}\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            itemId,\r\n                            header as keyof T,\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      /> */}\r\n                      \r\n                      <form onSubmit={onsubmit(handleInputChange(send))}>\r\n                      <StyledInput name={`${header}`} onBlur={()=>console.log('lior')}\r\n                      \r\n                      />\r\n                      </form>\r\n                    </StyledFlipTableDataBack>\r\n                  ) : (\r\n                    <StyledFlipTableDataFront key={`${itemId}-${header}`}>\r\n                      {String(item[header as keyof T])}\r\n                    </StyledFlipTableDataFront>\r\n                  )\r\n                )}\r\n              </StyleFlipTableRowInner>\r\n            );\r\n          })}\r\n        </StyleFlipTbody>\r\n      </StyledTable>\r\n    </StyledWrapper>\r\n  );\r\n}\r\n\r\nexport default GenericTable;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SACEC,aAAa,EACbC,aAAa,EACbC,WAAW,EACXC,iBAAiB,EACjBC,cAAc,EACdC,sBAAsB,EACtBC,wBAAwB,EACxBC,uBAAuB,EACvBC,WAAW,QACN,uBAAuB;AAC9B,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,IAAI,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS/B,SAASC,YAAYA,CAAmB;EACtCC,IAAI;EACJC,aAAa;EACbC,SAAS;EACTC;AACoB,CAAC,EAAe;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAM,EAAE,CAAC;EACnD,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAgB,IAAI,CAAC;EACjE,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAA6B,CAAC,CAAC,CAAC;EAE5E,MAAM;IAAC6B,QAAQ;IAAEC,YAAY;IAAEC;EAAS,CAAC,GAAGlB,OAAO,CAAI,CAAC;EACxDZ,SAAS,CAAC,MAAM;IACduB,YAAY,CAACN,IAAI,CAAC;EACpB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMc,eAAe,GAAG9B,WAAW,CAAE+B,MAAc,IAAK;IACtD,IAAIA,MAAM,KAAKR,UAAU,EAAE;MACzBC,aAAa,CAACD,UAAU,KAAKQ,MAAM,GAAG,IAAI,GAAGA,MAAM,CAAC;IACtD;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAIpB,IAAI,IAAK;IAClCqB,OAAO,CAACC,GAAG,CAACH,MAAM,EAAEI,KAAK,EAAEC,KAAK,CAAC;IACjCV,aAAa,CAAEW,QAAQ,KAAM;MAC3B,GAAGA,QAAQ;MACX,CAACN,MAAM,GAAG;QACR,GAAGM,QAAQ,CAACN,MAAM,CAAC;QACnB,CAACI,KAAK,GAAGC;MACX;IACF,CAAC,CAAC,CAAC;EACL,CAAC;;EAEH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,MAAME,oBAAoB,GAAGtC,WAAW,CACrCuC,IAAO,IAAK;IACX,MAAMC,gBAAgB,GAAG;MAAE,GAAGvB;IAAc,CAAC;IAC7C,MAAMc,MAAM,GAAGb,SAAS,CAACqB,IAAI,CAAC;IAC9B,IAAIC,gBAAgB,CAACT,MAAM,CAAC,EAAE;MAC5B,OAAOS,gBAAgB,CAACT,MAAM,CAAC;IACjC,CAAC,MAAM;MACLS,gBAAgB,CAACT,MAAM,CAAC,GAAGQ,IAAI;IACjC;IACApB,qBAAqB,CAACqB,gBAAgB,CAAC;IACvC,OAAOA,gBAAgB;EACzB,CAAC,EACD,CAACvB,aAAa,EAAEC,SAAS,EAAEC,qBAAqB,CAClD,CAAC;EAED,MAAMsB,YAAY,GAAGpB,SAAS,CAACqB,MAAM,GAAG,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACvB,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;EAE1E,IAAIA,SAAS,CAACqB,MAAM,KAAK,CAAC,EAAE;IAC1B,oBAAO5B,OAAA,CAACb,aAAa;MAAA4C,QAAA,EAAqB;IAAU,GAAzBC,IAAI,CAACC,MAAM,CAAC,CAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2B,CAAC;EACtE;EAEA,oBACErC,OAAA,CAACb,aAAa;IAACmD,SAAS,EAAC,eAAe;IAAAP,QAAA,eACtC/B,OAAA,CAACX,WAAW;MAAA0C,QAAA,gBACV/B,OAAA;QAAA+B,QAAA,eACE/B,OAAA,CAACZ,aAAa;UAAA2C,QAAA,gBACZ/B,OAAA,CAACV,iBAAiB;YAAAyC,QAAA,EAAiB;UAAE,GAAb,QAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAyB,CAAC,EACzDV,YAAY,CAACY,GAAG,CAAEC,MAAM,iBACvBxC,OAAA,CAACV,iBAAiB;YAAAyC,QAAA,EAAeS;UAAM,GAAfA,MAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6B,CAC5D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACRrC,OAAA,CAACT,cAAc;QAAAwC,QAAA,EACZxB,SAAS,CAACgC,GAAG,CAAEd,IAAI,IAAK;UACvB,MAAMR,MAAM,GAAGb,SAAS,CAACqB,IAAI,CAAC;UAC9B,MAAMgB,SAAS,GAAGhC,UAAU,KAAKQ,MAAM;UACvC,oBACEjB,OAAA,CAACR,sBAAsB;YAErBkD,OAAO,EAAEA,CAAA,KAAM1B,eAAe,CAACC,MAAM,CAAE;YAAAc,QAAA,gBAEvC/B,OAAA;cAAA+B,QAAA,eACE/B,OAAA,CAACJ,QAAQ;gBACP+C,EAAE,EAAG,YAAW1B,MAAO,EAAE;gBACzB2B,KAAK,EAAC,EAAE;gBACRC,OAAO,EAAE,CAAC,CAAC1C,aAAa,CAACc,MAAM,CAAE;gBACjC6B,QAAQ,EAAEA,CAAA,KAAMtB,oBAAoB,CAACC,IAAI;cAAE;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,EACJV,YAAY,CAACY,GAAG,CAAEC,MAAM,IACvBC,SAAS,gBACPzC,OAAA,CAACN,uBAAuB;cACtBqD,UAAU,EAAEN,SAAU,CAAC;cAAA;cAAAV,QAAA,eAevB/B,OAAA;gBAAMgD,QAAQ,EAAEC,QAAQ,CAAC/B,iBAAiB,CAACpB,IAAI,CAAC,CAAE;gBAAAiC,QAAA,eAClD/B,OAAA,CAACL,WAAW;kBAACuD,IAAI,EAAG,GAAEV,MAAO,EAAE;kBAACW,MAAM,EAAEA,CAAA,KAAIhC,OAAO,CAACC,GAAG,CAAC,MAAM;gBAAE;kBAAAc,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAE/D;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI;YAAC,GAlBD,GAAEpB,MAAO,IAAGuB,MAAO,EAAC;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAmBH,CAAC,gBAE1BrC,OAAA,CAACP,wBAAwB;cAAAsC,QAAA,EACtBqB,MAAM,CAAC3B,IAAI,CAACe,MAAM,CAAY;YAAC,GADF,GAAEvB,MAAO,IAAGuB,MAAO,EAAC;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE1B,CAE9B,CAAC;UAAA,GAxCIpB,MAAM;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAyCW,CAAC;QAE7B,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,GA7D8BL,IAAI,CAACC,MAAM,CAAC,CAAC;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA8D5C,CAAC;AAEpB;AAAC/B,EAAA,CAjIQL,YAAY;EAAA,QAUyBJ,OAAO;AAAA;AAAAwD,EAAA,GAV5CpD,YAAY;AAmIrB,eAAeA,YAAY;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
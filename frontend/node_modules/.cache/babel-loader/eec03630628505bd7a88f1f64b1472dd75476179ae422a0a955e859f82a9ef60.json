{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  customersAddresses: [],\n  selectedCustomerAddresses: {}\n};\nconst customersAddressesSlice = createSlice({\n  name: \"CustomerAddresses\",\n  initialState,\n  reducers: {\n    setCustomerAddresses: (state, action) => {\n      state.customersAddresses = action.payload;\n    },\n    setSelectedCustomerAddresses: (state, action) => {\n      state.selectedCustomerAddresses = action.payload;\n    },\n    addCustomerAddress: (state, action) => {\n      state.customersAddresses.push(action.payload);\n    }\n  }\n});\nexport const {\n  setCustomerAddresses,\n  setSelectedCustomerAddresses,\n  addCustomerAddress\n} = customersAddressesSlice.actions;\nexport default customersAddressesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","customersAddresses","selectedCustomerAddresses","customersAddressesSlice","name","reducers","setCustomerAddresses","state","action","payload","setSelectedCustomerAddresses","addCustomerAddress","push","actions","reducer"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/redux/features/customerAddresses/customerAddressesSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport IProjectCustomerDetailsModel from \"src/Models/ProjectCustomerDetailsModel\";\r\n\r\ninterface CustomersAddressesState {\r\n  customersAddresses: IProjectCustomerDetailsModel[];\r\n  selectedCustomerAddresses: Record<string, IProjectCustomerDetailsModel>;\r\n}\r\n\r\nconst initialState: CustomersAddressesState = {\r\n  customersAddresses: [],\r\n  selectedCustomerAddresses: {},\r\n};\r\n\r\nconst customersAddressesSlice = createSlice({\r\n  name: \"CustomerAddresses\",\r\n  initialState,\r\n  reducers: {\r\n    setCustomerAddresses: (\r\n      state,\r\n      action: PayloadAction<IProjectCustomerDetailsModel[]>\r\n    ) => {\r\n      state.customersAddresses = action.payload;\r\n    },\r\n    setSelectedCustomerAddresses: (\r\n      state,\r\n      action: PayloadAction<Record<string, IProjectCustomerDetailsModel>>\r\n    ) => {\r\n      state.selectedCustomerAddresses = action.payload;\r\n    },\r\n    addCustomerAddress: (\r\n      state,\r\n      action: PayloadAction<IProjectCustomerDetailsModel>\r\n    ) => {\r\n      state.customersAddresses.push(action.payload);\r\n    },\r\n  },\r\n});\r\nexport const { setCustomerAddresses, setSelectedCustomerAddresses, addCustomerAddress } =\r\n  customersAddressesSlice.actions;\r\n\r\nexport default customersAddressesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAQ7D,MAAMC,YAAqC,GAAG;EAC5CC,kBAAkB,EAAE,EAAE;EACtBC,yBAAyB,EAAE,CAAC;AAC9B,CAAC;AAED,MAAMC,uBAAuB,GAAGJ,WAAW,CAAC;EAC1CK,IAAI,EAAE,mBAAmB;EACzBJ,YAAY;EACZK,QAAQ,EAAE;IACRC,oBAAoB,EAAEA,CACpBC,KAAK,EACLC,MAAqD,KAClD;MACHD,KAAK,CAACN,kBAAkB,GAAGO,MAAM,CAACC,OAAO;IAC3C,CAAC;IACDC,4BAA4B,EAAEA,CAC5BH,KAAK,EACLC,MAAmE,KAChE;MACHD,KAAK,CAACL,yBAAyB,GAAGM,MAAM,CAACC,OAAO;IAClD,CAAC;IACDE,kBAAkB,EAAEA,CAClBJ,KAAK,EACLC,MAAmD,KAChD;MACHD,KAAK,CAACN,kBAAkB,CAACW,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;IAC/C;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEH,oBAAoB;EAAEI,4BAA4B;EAAEC;AAAmB,CAAC,GACrFR,uBAAuB,CAACU,OAAO;AAEjC,eAAeV,uBAAuB,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Components\\\\GenericTable\\\\GenericTable.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { StyledWrapper, StyleTableRow, StyledTable, StyledTableHeader, StyleFlipTbody, StyleFlipTableRowInner, StyledFlipTableDataFront, StyledFlipTableDataBack, StyledInput } from \"./GenericTable.styled\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenericTable({\n  data,\n  selectedItems,\n  getItemId,\n  onSelectedItemsChange\n}) {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [flippedRow, setFlippedRow] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  useEffect(() => {\n    setTableData(data);\n    console.log('Generic ' + JSON.Sdata);\n  }, [data]);\n  const handleCardClick = itemId => {\n    setFlippedRow(flippedRow === itemId ? null : itemId);\n  };\n  const handleInputChange = (itemId, field, value) => {\n    setEditedData(prevData => ({\n      ...prevData,\n      [itemId]: {\n        ...prevData[itemId],\n        [field]: value\n      }\n    }));\n  };\n  const handleCheckboxChange = useCallback(item => {\n    const newCheckboxState = {\n      ...selectedItems\n    };\n    const itemId = getItemId(item);\n    if (newCheckboxState[itemId]) {\n      delete newCheckboxState[itemId];\n    } else {\n      newCheckboxState[itemId] = item;\n    }\n    onSelectedItemsChange(newCheckboxState);\n    return newCheckboxState;\n  }, [selectedItems, getItemId, onSelectedItemsChange]);\n  const tableHeaders = tableData.length > 0 ? Object.keys(tableData[0]) : [];\n  if (tableData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: \"Loading...\"\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n    className: \"generic-table\",\n    children: /*#__PURE__*/_jsxDEV(StyledTable, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(StyleTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableHeader, {\n            children: \"\"\n          }, \"header\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), tableHeaders.map(header => /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyleFlipTbody, {\n        children: tableData.map(item => {\n          const itemId = getItemId(item);\n          const isFlipped = flippedRow === itemId;\n          return /*#__PURE__*/_jsxDEV(StyleFlipTableRowInner, {\n            onClick: () => handleCardClick(itemId),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                id: `checkbox-${itemId}`,\n                label: \"\",\n                checked: !!selectedItems[itemId],\n                onChange: () => handleCheckboxChange(item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), tableHeaders.map(header => isFlipped ? /*#__PURE__*/_jsxDEV(StyledFlipTableDataBack, {\n              $isflipped: isFlipped // Use $ prefix for transient props\n              ,\n              children: /*#__PURE__*/_jsxDEV(StyledInput, {\n                type: \"text\",\n                value: String(item[header]),\n                onChange: e => handleInputChange(itemId, header, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 23\n              }, this)\n            }, `${itemId}-${header}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(StyledFlipTableDataFront, {\n              children: String(item[header])\n            }, `${itemId}-${header}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, this))]\n          }, itemId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, Math.random(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(GenericTable, \"sCbosCqTe0qYsZ+oHpzNDhiBFlY=\");\n_c = GenericTable;\nexport default GenericTable;\nvar _c;\n$RefreshReg$(_c, \"GenericTable\");","map":{"version":3,"names":["useState","useEffect","useCallback","StyledWrapper","StyleTableRow","StyledTable","StyledTableHeader","StyleFlipTbody","StyleFlipTableRowInner","StyledFlipTableDataFront","StyledFlipTableDataBack","StyledInput","Checkbox","jsxDEV","_jsxDEV","GenericTable","data","selectedItems","getItemId","onSelectedItemsChange","_s","tableData","setTableData","flippedRow","setFlippedRow","editedData","setEditedData","console","log","JSON","Sdata","handleCardClick","itemId","handleInputChange","field","value","prevData","handleCheckboxChange","item","newCheckboxState","tableHeaders","length","Object","keys","children","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","className","map","header","isFlipped","onClick","id","label","checked","onChange","$isflipped","type","String","e","target","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Components/GenericTable/GenericTable.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  StyledWrapper,\r\n  StyleTableRow,\r\n  StyledTable,\r\n  StyledTableHeader,\r\n  StyleFlipTbody,\r\n  StyleFlipTableRowInner,\r\n  StyledFlipTableDataFront,\r\n  StyledFlipTableDataBack,\r\n  StyledInput,\r\n} from \"./GenericTable.styled\";\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\n\r\nexport interface GenericTableProps<T extends object> {\r\n  data: T[];\r\n  selectedItems: Record<string, T>;\r\n  getItemId: (item: T) => number;\r\n  onSelectedItemsChange: (selectedItems: Record<string, T>) => void;\r\n}\r\n\r\nfunction GenericTable<T extends object>({\r\n  data,\r\n  selectedItems,\r\n  getItemId,\r\n  onSelectedItemsChange,\r\n}: GenericTableProps<T>): JSX.Element {\r\n  const [tableData, setTableData] = useState<T[]>([]);\r\n  const [flippedRow, setFlippedRow] = useState<number | null>(null);\r\n  const [editedData, setEditedData] = useState<Record<number, Partial<T>>>({});\r\n\r\n  useEffect(() => {\r\n    setTableData(data);\r\n    console.log('Generic '+ JSON.Sdata)\r\n  }, [data]);\r\n\r\n  const handleCardClick = (itemId: number) => {\r\n    setFlippedRow(flippedRow === itemId ? null : itemId);\r\n  };\r\n\r\n  const handleInputChange = (itemId: number, field: keyof T, value: string) => {\r\n    setEditedData((prevData) => ({\r\n      ...prevData,\r\n      [itemId]: {\r\n        ...prevData[itemId],\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleCheckboxChange = useCallback(\r\n    (item: T) => {\r\n      const newCheckboxState = { ...selectedItems };\r\n      const itemId = getItemId(item);\r\n      if (newCheckboxState[itemId]) {\r\n        delete newCheckboxState[itemId];\r\n      } else {\r\n        newCheckboxState[itemId] = item;\r\n      }\r\n      onSelectedItemsChange(newCheckboxState);\r\n      return newCheckboxState;\r\n    },\r\n    [selectedItems, getItemId, onSelectedItemsChange]\r\n  );\r\n\r\n  const tableHeaders = tableData.length > 0 ? Object.keys(tableData[0]) : [];\r\n\r\n  if (tableData.length === 0) {\r\n    return <StyledWrapper key={Math.random()}>Loading...</StyledWrapper>;\r\n  }\r\n\r\n  return (\r\n    <StyledWrapper className=\"generic-table\" key={Math.random()}>\r\n      <StyledTable>\r\n        <thead>\r\n          <StyleTableRow>\r\n            <StyledTableHeader key={\"header\"}>{\"\"}</StyledTableHeader>\r\n            {tableHeaders.map((header) => (\r\n              <StyledTableHeader key={header}>{header}</StyledTableHeader>\r\n            ))}\r\n          </StyleTableRow>\r\n        </thead>\r\n        <StyleFlipTbody>\r\n          {tableData.map((item) => {\r\n            const itemId = getItemId(item);\r\n            const isFlipped = flippedRow === itemId;\r\n            return (\r\n              <StyleFlipTableRowInner\r\n                key={itemId}\r\n                onClick={() => handleCardClick(itemId)}\r\n              >\r\n                <td>\r\n                  <Checkbox\r\n                    id={`checkbox-${itemId}`}\r\n                    label=\"\"\r\n                    checked={!!selectedItems[itemId]}\r\n                    onChange={() => handleCheckboxChange(item)}\r\n                  />\r\n                </td>\r\n                {tableHeaders.map((header) =>\r\n                  isFlipped ? (\r\n                    <StyledFlipTableDataBack\r\n                      $isflipped={isFlipped} // Use $ prefix for transient props\r\n                      key={`${itemId}-${header}`}\r\n                    >\r\n                      <StyledInput\r\n                        type=\"text\"\r\n                        value={String(item[header as keyof T])}\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            itemId,\r\n                            header as keyof T,\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                    </StyledFlipTableDataBack>\r\n                  ) : (\r\n                    <StyledFlipTableDataFront\r\n                      key={`${itemId}-${header}`}\r\n                    >\r\n                      {String(item[header as keyof T])}\r\n                    </StyledFlipTableDataFront>\r\n                  )\r\n                )}\r\n              </StyleFlipTableRowInner>\r\n            );\r\n          })}\r\n        </StyleFlipTbody>\r\n      </StyledTable>\r\n    </StyledWrapper>\r\n  );\r\n}\r\n\r\nexport default GenericTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Components\\\\GenericTable\\\\GenericTable.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useMemo, useRef } from \"react\";\nimport { StyledWrapper, StyleTableRow, StyledTable, StyledTableHeader, StyleFlipTbody, StyleFlipTableRowInner, StyledFlipTableDataFront, StyledFlipTableDataBack, StyledInput } from \"./GenericTable.styled\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenericTable({\n  data,\n  selectedItems,\n  getItemId,\n  onSelectedItemsChange\n}) {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [flippedRow, setFlippedRow] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState\n  } = useForm();\n  const editedItem = useRef(null);\n  useEffect(() => {\n    setTableData(data);\n  }, [data]);\n  const handleCheckboxChange = useCallback(item => {\n    const newCheckboxState = {\n      ...selectedItems\n    };\n    const itemId = getItemId(item);\n    if (newCheckboxState[itemId]) {\n      delete newCheckboxState[itemId];\n    } else {\n      newCheckboxState[itemId] = item;\n    }\n    onSelectedItemsChange(newCheckboxState);\n    return newCheckboxState;\n  }, [selectedItems, getItemId, onSelectedItemsChange]);\n  const handleCardClick = itemId => {\n    if (itemId !== flippedRow) {\n      setFlippedRow(flippedRow === itemId ? null : itemId);\n    }\n  };\n  const tableHeaders = useMemo(() => {\n    return data.length > 0 ? Object.keys(data[0]) : [];\n  }, [data]);\n  const onSubmit = async formData => {\n    try {\n      // const lastEditedItem: string | number = Object.keys(formData)[0]\n      const listEditedItem = Object.keys(formData);\n      const lastEditedItem = listEditedItem[listEditedItem.length - 1];\n      // const isSameItem: boolean = editedItem.current !== null && editedItem.current === lastEditedItem\n      // console.log(formData)\n      // if(listEditedItem.length > 0){\n      console.log(formState);\n      console.log(formState.isDirty.valueOf());\n      //   console.table({id: lastEditedItem, isDirty:formState.isDirty, isSubmitted:formState.isSubmitted,\n      //     submitCount:formState.submitCount, touchedFields:formState.touchedFields,\n      //     defaultValues:formState.defaultValues\n      //   });\n\n      if (editedItem.current === null) {\n        editedItem.current = lastEditedItem;\n        console.log(\" send axios request\", \"item: \" + lastEditedItem);\n      } else if (editedItem.current === lastEditedItem) {\n        console.log(1111111);\n      } else if (editedItem.current !== lastEditedItem) {\n        console.log(\" send axios request\", \"item: \" + lastEditedItem);\n        // reset();\n      }\n      //   await axios.post(\"/api/update-data\", formData);\n      //   onSubmitSuccess();\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  if (tableData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: \"Loading...\"\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n    className: \"generic-table\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(StyledTable, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(StyleTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableHeader, {\n              children: \"\"\n            }, \"header\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), tableHeaders.map(header => /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n              children: header\n            }, header, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyleFlipTbody, {\n          children: tableData.map(item => {\n            const itemId = getItemId(item);\n            const isFlipped = flippedRow === itemId;\n            return /*#__PURE__*/_jsxDEV(StyleFlipTableRowInner, {\n              onClick: () => handleCardClick(itemId) // For flip the card\n              ,\n              onFocus: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: `checkbox-${itemId}`,\n                  label: \"\",\n                  checked: !!selectedItems[itemId],\n                  onChange: () => handleCheckboxChange(item)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), tableHeaders.map(header => isFlipped ? /*#__PURE__*/_jsxDEV(StyledFlipTableDataBack, {\n                $isflipped: isFlipped // Use $ prefix for transient props\n                ,\n                children: /*#__PURE__*/_jsxDEV(StyledInput, {\n                  defaultValue: String(item[header]),\n                  ...register(`${itemId}.${header}`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this)\n              }, `${itemId}-${header}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(StyledFlipTableDataFront, {\n                children: String(item[header])\n              }, `${itemId}-${header}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 23\n              }, this))]\n            }, itemId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, Math.random(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(GenericTable, \"lv5k2Xer7DuQAGnNl/N3E50A1d0=\", false, function () {\n  return [useForm];\n});\n_c = GenericTable;\nexport default GenericTable;\nvar _c;\n$RefreshReg$(_c, \"GenericTable\");","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","useRef","StyledWrapper","StyleTableRow","StyledTable","StyledTableHeader","StyleFlipTbody","StyleFlipTableRowInner","StyledFlipTableDataFront","StyledFlipTableDataBack","StyledInput","Checkbox","useForm","jsxDEV","_jsxDEV","GenericTable","data","selectedItems","getItemId","onSelectedItemsChange","_s","tableData","setTableData","flippedRow","setFlippedRow","editedData","setEditedData","register","handleSubmit","reset","formState","editedItem","handleCheckboxChange","item","newCheckboxState","itemId","handleCardClick","tableHeaders","length","Object","keys","onSubmit","formData","listEditedItem","lastEditedItem","console","log","isDirty","valueOf","current","error","children","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","className","map","header","isFlipped","onClick","onFocus","id","label","checked","onChange","$isflipped","defaultValue","String","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Components/GenericTable/GenericTable.tsx"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo, useRef } from \"react\";\r\nimport {\r\n  StyledWrapper,\r\n  StyleTableRow,\r\n  StyledTable,\r\n  StyledTableHeader,\r\n  StyleFlipTbody,\r\n  StyleFlipTableRowInner,\r\n  StyledFlipTableDataFront,\r\n  StyledFlipTableDataBack,\r\n  StyledInput,\r\n} from \"./GenericTable.styled\";\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\nimport { Path, SubmitHandler, useForm } from \"react-hook-form\";\r\n\r\nexport interface GenericTableProps<T extends object> {\r\n  data: T[];\r\n  selectedItems: Record<string, T>;\r\n  getItemId: (item: T) => number;\r\n  onSelectedItemsChange: (selectedItems: Record<string, T>) => void;\r\n}\r\n\r\nfunction GenericTable<T extends object>({\r\n  data,\r\n  selectedItems,\r\n  getItemId,\r\n  onSelectedItemsChange,\r\n}: GenericTableProps<T>): JSX.Element {\r\n  const [tableData, setTableData] = useState<T[]>([]);\r\n  const [flippedRow, setFlippedRow] = useState<number | null>(null);\r\n  const [editedData, setEditedData] = useState<Record<number, Partial<T>>>({});\r\n  const { register, handleSubmit, reset ,formState } = useForm<T>();\r\n  const editedItem = useRef<string | number | null>(null);\r\n\r\n  useEffect(() => {\r\n    setTableData(data);\r\n  }, [data]);\r\n\r\n  const handleCheckboxChange = useCallback(\r\n    (item: T) => {\r\n      const newCheckboxState = { ...selectedItems };\r\n      const itemId = getItemId(item);\r\n      if (newCheckboxState[itemId]) {\r\n        delete newCheckboxState[itemId];\r\n      } else {\r\n        newCheckboxState[itemId] = item;\r\n      }\r\n      onSelectedItemsChange(newCheckboxState);\r\n      return newCheckboxState;\r\n    },\r\n    [selectedItems, getItemId, onSelectedItemsChange]\r\n  );\r\n\r\n  const handleCardClick = (itemId: number) => {\r\n    if (itemId !== flippedRow) {\r\n      setFlippedRow(flippedRow === itemId ? null : itemId);\r\n    }\r\n  };\r\n\r\n  const tableHeaders = useMemo(() => {\r\n    return data.length > 0 ? Object.keys(data[0]) : [];\r\n  }, [data]);\r\n\r\n  const onSubmit: SubmitHandler<T> = async (formData) => {\r\n    try {\r\n      // const lastEditedItem: string | number = Object.keys(formData)[0]\r\n      const listEditedItem = Object.keys(formData);\r\n      const lastEditedItem = listEditedItem[listEditedItem.length - 1];\r\n      // const isSameItem: boolean = editedItem.current !== null && editedItem.current === lastEditedItem\r\n      // console.log(formData)\r\n      // if(listEditedItem.length > 0){\r\nconsole.log(formState)\r\nconsole.log(formState.isDirty.valueOf())\r\n      //   console.table({id: lastEditedItem, isDirty:formState.isDirty, isSubmitted:formState.isSubmitted,\r\n    //     submitCount:formState.submitCount, touchedFields:formState.touchedFields,\r\n    //     defaultValues:formState.defaultValues\r\n    //   });\r\n\r\n      if (editedItem.current === null) {\r\n        editedItem.current = lastEditedItem;\r\n        console.log(\" send axios request\", \"item: \" + lastEditedItem);\r\n      } else if (editedItem.current === lastEditedItem) {\r\n        console.log(1111111);\r\n      } else if (editedItem.current !== lastEditedItem) {\r\n        console.log(\" send axios request\", \"item: \" + lastEditedItem);\r\n        // reset();\r\n      }\r\n      //   await axios.post(\"/api/update-data\", formData);\r\n      //   onSubmitSuccess();\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  if (tableData.length === 0) {\r\n    return <StyledWrapper key={Math.random()}>Loading...</StyledWrapper>;\r\n  }\r\n\r\n  return (\r\n    <StyledWrapper className=\"generic-table\" key={Math.random()}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <StyledTable>\r\n          <thead>\r\n            <StyleTableRow>\r\n              <StyledTableHeader key={\"header\"}>{\"\"}</StyledTableHeader>\r\n              {tableHeaders.map((header) => (\r\n                <StyledTableHeader key={header}>{header}</StyledTableHeader>\r\n              ))}\r\n            </StyleTableRow>\r\n          </thead>\r\n          <StyleFlipTbody>\r\n            {tableData.map((item) => {\r\n              const itemId = getItemId(item);\r\n              const isFlipped = flippedRow === itemId;\r\n              return (\r\n                <StyleFlipTableRowInner\r\n                  key={itemId}\r\n                  onClick={() => handleCardClick(itemId)} // For flip the card\r\n                  onFocus={handleSubmit(onSubmit)}\r\n                >\r\n                  <td>\r\n                    <Checkbox\r\n                      id={`checkbox-${itemId}`}\r\n                      label=\"\"\r\n                      checked={!!selectedItems[itemId]}\r\n                      onChange={() => handleCheckboxChange(item)}\r\n                    />\r\n                  </td>\r\n                  {tableHeaders.map((header) =>\r\n                    isFlipped ? (\r\n                      <StyledFlipTableDataBack\r\n                        $isflipped={isFlipped} // Use $ prefix for transient props\r\n                        key={`${itemId}-${header}`}\r\n                      >\r\n                        <StyledInput\r\n                          defaultValue={String(item[header as keyof T])}\r\n                          {...register(`${itemId}.${header}` as Path<T>)}\r\n                        />\r\n                      </StyledFlipTableDataBack>\r\n                    ) : (\r\n                      <StyledFlipTableDataFront key={`${itemId}-${header}`}>\r\n                        {String(item[header as keyof T])}\r\n                      </StyledFlipTableDataFront>\r\n                    )\r\n                  )}\r\n                </StyleFlipTableRowInner>\r\n              );\r\n            })}\r\n          </StyleFlipTbody>\r\n        </StyledTable>\r\n      </form>\r\n    </StyledWrapper>\r\n  );\r\n}\r\n\r\nexport default GenericTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Components\\\\GenericTable\\\\GenericTable.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { StyledWrapper, StyleTableRow, StyledTable, StyledTableHeader, StyleFlipTbody, StyleFlipTableRowInner, StyledFlipTableDataFront, StyledFlipTableDataBack, StyledInput } from \"./GenericTable.styled\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenericTable({\n  data,\n  selectedItems,\n  getItemId,\n  onSelectedItemsChange,\n  onSubmitChange\n}) {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [flippedRow, setFlippedRow] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n  useEffect(() => {\n    setTableData(data);\n  }, [data]);\n  const handleCheckboxChange = useCallback(item => {\n    const newCheckboxState = {\n      ...selectedItems\n    };\n    const itemId = getItemId(item);\n    if (newCheckboxState[itemId]) {\n      delete newCheckboxState[itemId];\n    } else {\n      newCheckboxState[itemId] = item;\n    }\n    onSelectedItemsChange(newCheckboxState);\n    return newCheckboxState;\n  }, [selectedItems, getItemId, onSelectedItemsChange]);\n  const handleCardClick = itemId => {\n    if (itemId !== flippedRow) {\n      setFlippedRow(flippedRow === itemId ? null : itemId);\n    }\n  };\n  const tableHeaders = useMemo(() => {\n    return data.length > 0 ? Object.keys(data[0]) : [];\n  }, [data]);\n  const onSubmit = async formData => {\n    try {\n      const listEditedItem = Object.keys(formData);\n      const lastEditedItem = Object.values(formData)[listEditedItem.length - 1];\n      onSubmitChange && onSubmitChange(lastEditedItem);\n      reset();\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  if (tableData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: \"Loading...\"\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n    className: \"generic-table\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(StyledTable, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(StyleTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableHeader, {\n              children: \"\"\n            }, \"header\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), tableHeaders.map(header => /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n              children: header\n            }, header, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyleFlipTbody, {\n          children: tableData.map(item => {\n            const itemId = getItemId(item);\n            const isFlipped = flippedRow === itemId;\n            return /*#__PURE__*/_jsxDEV(StyleFlipTableRowInner, {\n              onClick: () => handleCardClick(itemId) // For flip the card\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: `checkbox-${itemId}`,\n                  label: \"\",\n                  checked: !!selectedItems[itemId],\n                  onChange: () => handleCheckboxChange(item)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), tableHeaders.map(header => isFlipped ? /*#__PURE__*/_jsxDEV(StyledFlipTableDataBack, {\n                $isflipped: isFlipped // Use $ prefix for transient props\n                ,\n                children: /*#__PURE__*/_jsxDEV(StyledInput, {\n                  defaultValue: String(item[header]),\n                  ...register(`${itemId}.${header}`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this)\n              }, `${itemId}-${header}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(StyledFlipTableDataFront, {\n                children: String(item[header])\n              }, `${itemId}-${header}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: isFlipped && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleSubmit(onSubmit),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)]\n            }, itemId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, Math.random(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(GenericTable, \"NQKuZbaCEheZkOvNYN8Peco/F5A=\", false, function () {\n  return [useForm];\n});\n_c = GenericTable;\nexport default GenericTable;\nvar _c;\n$RefreshReg$(_c, \"GenericTable\");","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","StyledWrapper","StyleTableRow","StyledTable","StyledTableHeader","StyleFlipTbody","StyleFlipTableRowInner","StyledFlipTableDataFront","StyledFlipTableDataBack","StyledInput","Checkbox","useForm","jsxDEV","_jsxDEV","GenericTable","data","selectedItems","getItemId","onSelectedItemsChange","onSubmitChange","_s","tableData","setTableData","flippedRow","setFlippedRow","register","handleSubmit","reset","handleCheckboxChange","item","newCheckboxState","itemId","handleCardClick","tableHeaders","length","Object","keys","onSubmit","formData","listEditedItem","lastEditedItem","values","error","console","children","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","className","map","header","isFlipped","onClick","id","label","checked","onChange","$isflipped","defaultValue","String","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Components/GenericTable/GenericTable.tsx"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport {\r\n  StyledWrapper,\r\n  StyleTableRow,\r\n  StyledTable,\r\n  StyledTableHeader,\r\n  StyleFlipTbody,\r\n  StyleFlipTableRowInner,\r\n  StyledFlipTableDataFront,\r\n  StyledFlipTableDataBack,\r\n  StyledInput,\r\n} from \"./GenericTable.styled\";\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\nimport { Path, SubmitHandler, useForm } from \"react-hook-form\";\r\n\r\nexport interface GenericTableProps<T extends object> {\r\n  data: T[];\r\n  selectedItems: Record<string, T>;\r\n  getItemId: (item: T) => number;\r\n  onSelectedItemsChange: (selectedItems: Record<string, T>) => void;\r\n  onSubmitChange?: (item: T) => void;\r\n}\r\n\r\nfunction GenericTable<T extends object>({\r\n  data,\r\n  selectedItems,\r\n  getItemId,\r\n  onSelectedItemsChange,\r\n  onSubmitChange,\r\n}: GenericTableProps<T>): JSX.Element {\r\n  const [tableData, setTableData] = useState<T[]>([]);\r\n  const [flippedRow, setFlippedRow] = useState<number | null>(null);\r\n  const { register, handleSubmit, reset } = useForm<T>();\r\n\r\n  useEffect(() => {\r\n    setTableData(data);\r\n  }, [data]);\r\n\r\n  const handleCheckboxChange = useCallback(\r\n    (item: T) => {\r\n      const newCheckboxState = { ...selectedItems };\r\n      const itemId = getItemId(item);\r\n      if (newCheckboxState[itemId]) {\r\n        delete newCheckboxState[itemId];\r\n      } else {\r\n        newCheckboxState[itemId] = item;\r\n      }\r\n      onSelectedItemsChange(newCheckboxState);\r\n      return newCheckboxState;\r\n    },\r\n    [selectedItems, getItemId, onSelectedItemsChange]\r\n  );\r\n\r\n  const handleCardClick = (itemId: number) => {\r\n    if (itemId !== flippedRow) {\r\n      setFlippedRow(flippedRow === itemId ? null : itemId);\r\n    }\r\n  };\r\n\r\n  const tableHeaders = useMemo(() => {\r\n    return data.length > 0 ? Object.keys(data[0]) : [];\r\n  }, [data]);\r\n\r\n  const onSubmit: SubmitHandler<T> = async (formData) => {\r\n    try {\r\n      const listEditedItem = Object.keys(formData);\r\n      const lastEditedItem = Object.values(formData)[listEditedItem.length - 1];\r\n      onSubmitChange && onSubmitChange(lastEditedItem);\r\n      reset();\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  if (tableData.length === 0) {\r\n    return <StyledWrapper key={Math.random()}>Loading...</StyledWrapper>;\r\n  }\r\n\r\n  return (\r\n    <StyledWrapper className=\"generic-table\" key={Math.random()}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <StyledTable>\r\n          <thead>\r\n            <StyleTableRow>\r\n              <StyledTableHeader key={\"header\"}>{\"\"}</StyledTableHeader>\r\n              {tableHeaders.map((header) => (\r\n                <StyledTableHeader key={header}>{header}</StyledTableHeader>\r\n              ))}\r\n            </StyleTableRow>\r\n          </thead>\r\n          <StyleFlipTbody>\r\n            {tableData.map((item) => {\r\n              const itemId = getItemId(item);\r\n              const isFlipped = flippedRow === itemId;\r\n              return (\r\n                <StyleFlipTableRowInner\r\n                  key={itemId}\r\n                  onClick={() => handleCardClick(itemId)} // For flip the card\r\n                >\r\n                  <td>\r\n                    <Checkbox\r\n                      id={`checkbox-${itemId}`}\r\n                      label=\"\"\r\n                      checked={!!selectedItems[itemId]}\r\n                      onChange={() => handleCheckboxChange(item)}\r\n                    />\r\n                  </td>\r\n                  {tableHeaders.map((header) =>\r\n                    isFlipped ? (\r\n                      <StyledFlipTableDataBack\r\n                        $isflipped={isFlipped} // Use $ prefix for transient props\r\n                        key={`${itemId}-${header}`}\r\n                      >\r\n                        <StyledInput\r\n                          defaultValue={String(item[header as keyof T])}\r\n                          {...register(`${itemId}.${header}` as Path<T>)}\r\n                        />\r\n                      </StyledFlipTableDataBack>\r\n                    ) : (\r\n                      <StyledFlipTableDataFront key={`${itemId}-${header}`}>\r\n                        {String(item[header as keyof T])}\r\n                      </StyledFlipTableDataFront>\r\n                    )\r\n                  )}\r\n                  <td>\r\n                    {isFlipped && (\r\n                      <button onClick={handleSubmit(onSubmit)}>Save</button>\r\n                    )}\r\n                  </td>\r\n                </StyleFlipTableRowInner>\r\n              );\r\n            })}\r\n          </StyleFlipTbody>\r\n        </StyledTable>\r\n      </form>\r\n    </StyledWrapper>\r\n  );\r\n}\r\n\r\nexport default GenericTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
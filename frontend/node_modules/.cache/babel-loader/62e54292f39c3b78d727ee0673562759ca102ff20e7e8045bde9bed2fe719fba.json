{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Components\\\\GenericTable\\\\GenericTable.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useMemo } from \"react\";\nimport { StyledWrapper, StyleTableRow, StyledTable, StyledTableHeader, StyleFlipTbody, StyleFlipTableRowInner, StyledFlipTableDataFront, StyledFlipTableDataBack, StyledInput } from \"./GenericTable.styled\";\nimport Checkbox from \"../Checkbox/Checkbox\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenericTable({\n  data,\n  selectedItems,\n  getItemId,\n  onSelectedItemsChange\n}) {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [flippedRow, setFlippedRow] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  useEffect(() => {\n    setTableData(data);\n  }, [data]);\n  const handleCardClick = itemId => {\n    setFlippedRow(flippedRow === itemId ? null : itemId);\n  };\n  const handleInputChange = useCallback((itemId, field, value) => {\n    setEditedData(prevData => ({\n      ...prevData,\n      [itemId]: {\n        ...prevData[itemId],\n        [field]: value\n      }\n    }));\n  }, [data]);\n  const handleCheckboxChange = useCallback(item => {\n    const newCheckboxState = {\n      ...selectedItems\n    };\n    const itemId = getItemId(item);\n    if (newCheckboxState[itemId]) {\n      delete newCheckboxState[itemId];\n    } else {\n      newCheckboxState[itemId] = item;\n    }\n    onSelectedItemsChange(newCheckboxState);\n    return newCheckboxState;\n  }, [selectedItems, getItemId, onSelectedItemsChange]);\n  const tableHeaders = useMemo(() => {\n    return data.length > 0 ? Object.keys(data[0]) : [];\n  }, [data]);\n  if (tableData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n      children: \"Loading...\"\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n  const onSubmit = async formData => {\n    try {\n      console.log(formData);\n      //   await axios.post(\"/api/update-data\", formData);\n      //   onSubmitSuccess();\n    } catch (error) {\n      console.error(\"Error updating data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyledWrapper, {\n    className: \"generic-table\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(StyledTable, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(StyleTableRow, {\n            children: [/*#__PURE__*/_jsxDEV(StyledTableHeader, {\n              children: \"\"\n            }, \"header\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 13\n            }, this), tableHeaders.map(header => /*#__PURE__*/_jsxDEV(StyledTableHeader, {\n              children: header\n            }, header, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(StyleFlipTbody, {\n          children: tableData.map(item => {\n            const itemId = getItemId(item);\n            const isFlipped = flippedRow === itemId;\n            return /*#__PURE__*/_jsxDEV(StyleFlipTableRowInner, {\n              onClick: () => handleCardClick(itemId),\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  id: `checkbox-${itemId}`,\n                  label: \"\",\n                  checked: !!selectedItems[itemId],\n                  onChange: () => handleCheckboxChange(item)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), tableHeaders.map(header => isFlipped ? /*#__PURE__*/_jsxDEV(StyledFlipTableDataBack, {\n                $isflipped: isFlipped // Use $ prefix for transient props\n                ,\n                children: /*#__PURE__*/_jsxDEV(StyledInput, {\n                  type: \"text\",\n                  value: String(item[header]),\n                  onChange: e => handleInputChange(itemId, header, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this)\n              }, `${itemId}-${header}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(StyledFlipTableDataFront, {\n                children: String(item[header])\n              }, `${itemId}-${header}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this))]\n            }, itemId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, Math.random(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(GenericTable, \"X48V0JgpMAqouH7kQHcMMrQkQfM=\", false, function () {\n  return [useForm];\n});\n_c = GenericTable;\nexport default GenericTable;\nvar _c;\n$RefreshReg$(_c, \"GenericTable\");","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","StyledWrapper","StyleTableRow","StyledTable","StyledTableHeader","StyleFlipTbody","StyleFlipTableRowInner","StyledFlipTableDataFront","StyledFlipTableDataBack","StyledInput","Checkbox","useForm","jsxDEV","_jsxDEV","GenericTable","data","selectedItems","getItemId","onSelectedItemsChange","_s","tableData","setTableData","flippedRow","setFlippedRow","editedData","setEditedData","register","handleSubmit","handleCardClick","itemId","handleInputChange","field","value","prevData","handleCheckboxChange","item","newCheckboxState","tableHeaders","length","Object","keys","children","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","formData","console","log","error","className","map","header","isFlipped","onClick","id","label","checked","onChange","$isflipped","type","String","e","target","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Components/GenericTable/GenericTable.tsx"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport {\r\n  StyledWrapper,\r\n  StyleTableRow,\r\n  StyledTable,\r\n  StyledTableHeader,\r\n  StyleFlipTbody,\r\n  StyleFlipTableRowInner,\r\n  StyledFlipTableDataFront,\r\n  StyledFlipTableDataBack,\r\n  StyledInput,\r\n} from \"./GenericTable.styled\";\r\nimport Checkbox from \"../Checkbox/Checkbox\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\n\r\nexport interface GenericTableProps<T extends object> {\r\n  data: T[];\r\n  selectedItems: Record<string, T>;\r\n  getItemId: (item: T) => number;\r\n  onSelectedItemsChange: (selectedItems: Record<string, T>) => void;\r\n}\r\n\r\nfunction GenericTable<T extends object>({\r\n  data,\r\n  selectedItems,\r\n  getItemId,\r\n  onSelectedItemsChange,\r\n}: GenericTableProps<T>): JSX.Element {\r\n  const [tableData, setTableData] = useState<T[]>([]);\r\n  const [flippedRow, setFlippedRow] = useState<number | null>(null);\r\n  const [editedData, setEditedData] = useState<Record<number, Partial<T>>>({});\r\n  const { register, handleSubmit } = useForm<T>();\r\n\r\n  useEffect(() => {\r\n    setTableData(data);\r\n  }, [data]);\r\n\r\n  const handleCardClick = (itemId: number) => {\r\n    setFlippedRow(flippedRow === itemId ? null : itemId);\r\n  };\r\n\r\n  const handleInputChange = useCallback( (itemId: number, field: keyof T, value: string) => {\r\n    \r\n    setEditedData((prevData) => ({\r\n      ...prevData,\r\n      [itemId]: {\r\n        ...prevData[itemId],\r\n        [field]: value,\r\n      },\r\n    }));\r\n  },[data]);\r\n\r\n  const handleCheckboxChange = useCallback(\r\n    (item: T) => {\r\n      const newCheckboxState = { ...selectedItems };\r\n      const itemId = getItemId(item);\r\n      if (newCheckboxState[itemId]) {\r\n        delete newCheckboxState[itemId];\r\n      } else {\r\n        newCheckboxState[itemId] = item;\r\n      }\r\n      onSelectedItemsChange(newCheckboxState);\r\n      return newCheckboxState;\r\n    },\r\n    [selectedItems, getItemId, onSelectedItemsChange]\r\n  );\r\n\r\n  const tableHeaders = useMemo(() => {\r\n    return data.length > 0 ? Object.keys(data[0]) : [];\r\n  }, [data]);\r\n\r\n  if (tableData.length === 0) {\r\n    return <StyledWrapper key={Math.random()}>Loading...</StyledWrapper>;\r\n  }\r\n\r\n  const onSubmit: SubmitHandler<T> = async (formData) => {\r\n    try {\r\n        console.log(formData)\r\n    //   await axios.post(\"/api/update-data\", formData);\r\n    //   onSubmitSuccess();\r\n    } catch (error) {\r\n      console.error(\"Error updating data:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledWrapper className=\"generic-table\" key={Math.random()}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n      <StyledTable>\r\n        <thead>\r\n          <StyleTableRow>\r\n            <StyledTableHeader key={\"header\"}>{\"\"}</StyledTableHeader>\r\n            {tableHeaders.map((header) => (\r\n              <StyledTableHeader key={header}>{header}</StyledTableHeader>\r\n            ))}\r\n          </StyleTableRow>\r\n        </thead>\r\n        <StyleFlipTbody>\r\n          {tableData.map((item) => {\r\n            const itemId = getItemId(item);\r\n            const isFlipped = flippedRow === itemId;\r\n            return (\r\n              <StyleFlipTableRowInner\r\n                key={itemId}\r\n                onClick={() => handleCardClick(itemId)}\r\n              >\r\n                <td>\r\n                  <Checkbox\r\n                    id={`checkbox-${itemId}`}\r\n                    label=\"\"\r\n                    checked={!!selectedItems[itemId]}\r\n                    onChange={() => handleCheckboxChange(item)}\r\n                  />\r\n                </td>\r\n                {tableHeaders.map((header) =>\r\n                  isFlipped ? (\r\n                    <StyledFlipTableDataBack\r\n                      $isflipped={isFlipped} // Use $ prefix for transient props\r\n                      key={`${itemId}-${header}`}\r\n                    >\r\n                      <StyledInput\r\n                        type=\"text\"\r\n                        value={String(item[header as keyof T])}\r\n                        onChange={(e) =>\r\n                          handleInputChange(\r\n                            itemId,\r\n                            header as keyof T,\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                      />\r\n                    </StyledFlipTableDataBack>\r\n                  ) : (\r\n                    <StyledFlipTableDataFront\r\n                      key={`${itemId}-${header}`}\r\n                    >\r\n                      {String(item[header as keyof T])}\r\n                    </StyledFlipTableDataFront>\r\n                  )\r\n                )}\r\n              </StyleFlipTableRowInner>\r\n            );\r\n          })}\r\n        </StyleFlipTbody>\r\n      </StyledTable>\r\n      </form>\r\n    </StyledWrapper>\r\n  );\r\n}\r\n\r\nexport default GenericTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
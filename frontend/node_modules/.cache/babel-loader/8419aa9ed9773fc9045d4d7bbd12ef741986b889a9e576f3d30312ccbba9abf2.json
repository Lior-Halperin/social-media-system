{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\Private_Projects\\\\social-media-system\\\\frontend\\\\src\\\\Views\\\\SocialCustomerView\\\\SocialCustomerListView.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport GenericTable from \"src/Components/GenericTable/GenericTable\";\nimport HoveringButton from \"src/Components/HoveringButton/HoveringButton\";\nimport SocketEvents from \"src/Models/SocketEvents\";\nimport config from \"src/Utils/Config\";\nimport useSocialCustomer from \"src/hooks/useSocialCustomer\";\nimport useSocketIo from \"src/hooks/useSocketIo\";\nimport { setSelectedCustomer } from \"src/redux/features/socialCustomer/socialCustomerSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SocialCustomerListView() {\n  _s();\n  // Utilize the custom hook to access socialCustomers data and functionalities\n  const {\n    socialCustomer,\n    error,\n    isError,\n    isLoading\n  } = useSocialCustomer();\n  useEffect(() => {\n    console.log('socialCustomer');\n    socialCustomer;\n  }, [socialCustomer]);\n  // Select the socialCustomer slice from the Redux store\n  const selectedCustomer = useSelector(state => state.socialCustomer.selectedCustomer);\n  const dispatch = useDispatch();\n  useSocketIo(config.baseURL, SocketEvents.AddedSocialCustomer);\n  const handleSelectedItemsChange = newSelectedItems => {\n    dispatch(setSelectedCustomer(newSelectedItems));\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 25\n  }, this);\n  // if (isError) return <div>Error: {error?.message}</div>;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GenericTable, {\n      data: socialCustomer,\n      selectedItems: selectedCustomer,\n      getItemId: item => item.customerId,\n      onSelectedItemsChange: handleSelectedItemsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HoveringButton, {\n      data: socialCustomer,\n      selectedItems: selectedCustomer,\n      getItemId: item => item.customerId,\n      onSelectedItemsChange: handleSelectedItemsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SocialCustomerListView, \"vDGXSJRPNNaX4bnxOSk4fwwl5nQ=\", false, function () {\n  return [useSocialCustomer, useSelector, useDispatch, useSocketIo];\n});\n_c = SocialCustomerListView;\nexport default SocialCustomerListView;\nvar _c;\n$RefreshReg$(_c, \"SocialCustomerListView\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","GenericTable","HoveringButton","SocketEvents","config","useSocialCustomer","useSocketIo","setSelectedCustomer","jsxDEV","_jsxDEV","Fragment","_Fragment","SocialCustomerListView","_s","socialCustomer","error","isError","isLoading","console","log","selectedCustomer","state","dispatch","baseURL","AddedSocialCustomer","handleSelectedItemsChange","newSelectedItems","children","fileName","_jsxFileName","lineNumber","columnNumber","data","selectedItems","getItemId","item","customerId","onSelectedItemsChange","_c","$RefreshReg$"],"sources":["C:/Coding/Private_Projects/social-media-system/frontend/src/Views/SocialCustomerView/SocialCustomerListView.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport GenericTable from \"src/Components/GenericTable/GenericTable\";\r\nimport HoveringButton from \"src/Components/HoveringButton/HoveringButton\";\r\nimport { ISocialCustomerModel } from \"src/Models/SocialCustomerModel\";\r\nimport SocketEvents from \"src/Models/SocketEvents\";\r\nimport config from \"src/Utils/Config\";\r\nimport useSocialCustomer from \"src/hooks/useSocialCustomer\";\r\nimport useSocketIo from \"src/hooks/useSocketIo\";\r\nimport { setSelectedCustomer } from \"src/redux/features/socialCustomer/socialCustomerSlice\";\r\nimport { RootState } from \"src/redux/store\";\r\n\r\nfunction SocialCustomerListView(): JSX.Element {\r\n  // Utilize the custom hook to access socialCustomers data and functionalities\r\n  const { socialCustomer, error, isError, isLoading } = useSocialCustomer();\r\n  useEffect(()=>{\r\n    console.log('socialCustomer')\r\n    socialCustomer\r\n},[socialCustomer])\r\n  // Select the socialCustomer slice from the Redux store\r\n  const selectedCustomer = useSelector(\r\n    (state: RootState) => state.socialCustomer.selectedCustomer\r\n  );\r\n  const dispatch = useDispatch();\r\n  useSocketIo(config.baseURL,SocketEvents.AddedSocialCustomer)\r\n\r\n  const handleSelectedItemsChange = (\r\n    newSelectedItems: Record<string, ISocialCustomerModel>\r\n  ) => {\r\n    dispatch(setSelectedCustomer(newSelectedItems));\r\n  };\r\n  if (isLoading) return <div>Loading...</div>;\r\n  // if (isError) return <div>Error: {error?.message}</div>;\r\n\r\n  return (\r\n    <>\r\n      <GenericTable<ISocialCustomerModel>\r\n        data={socialCustomer}\r\n        selectedItems={selectedCustomer}\r\n        getItemId={(item) => item.customerId}\r\n        onSelectedItemsChange={handleSelectedItemsChange}\r\n      />\r\n      <HoveringButton<ISocialCustomerModel>\r\n        data={socialCustomer}\r\n        selectedItems={selectedCustomer}\r\n        getItemId={(item) => item.customerId}\r\n        onSelectedItemsChange={handleSelectedItemsChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SocialCustomerListView;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,YAAY,MAAM,0CAA0C;AACnE,OAAOC,cAAc,MAAM,8CAA8C;AAEzE,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,iBAAiB,MAAM,6BAA6B;AAC3D,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,SAASC,mBAAmB,QAAQ,uDAAuD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5F,SAASC,sBAAsBA,CAAA,EAAgB;EAAAC,EAAA;EAC7C;EACA,MAAM;IAAEC,cAAc;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAGZ,iBAAiB,CAAC,CAAC;EACzEP,SAAS,CAAC,MAAI;IACZoB,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BL,cAAc;EAClB,CAAC,EAAC,CAACA,cAAc,CAAC,CAAC;EACjB;EACA,MAAMM,gBAAgB,GAAGpB,WAAW,CACjCqB,KAAgB,IAAKA,KAAK,CAACP,cAAc,CAACM,gBAC7C,CAAC;EACD,MAAME,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAC9BO,WAAW,CAACF,MAAM,CAACmB,OAAO,EAACpB,YAAY,CAACqB,mBAAmB,CAAC;EAE5D,MAAMC,yBAAyB,GAC7BC,gBAAsD,IACnD;IACHJ,QAAQ,CAACf,mBAAmB,CAACmB,gBAAgB,CAAC,CAAC;EACjD,CAAC;EACD,IAAIT,SAAS,EAAE,oBAAOR,OAAA;IAAAkB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C;;EAEA,oBACEtB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA,CAACR,YAAY;MACX+B,IAAI,EAAElB,cAAe;MACrBmB,aAAa,EAAEb,gBAAiB;MAChCc,SAAS,EAAGC,IAAI,IAAKA,IAAI,CAACC,UAAW;MACrCC,qBAAqB,EAAEZ;IAA0B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACFtB,OAAA,CAACP,cAAc;MACb8B,IAAI,EAAElB,cAAe;MACrBmB,aAAa,EAAEb,gBAAiB;MAChCc,SAAS,EAAGC,IAAI,IAAKA,IAAI,CAACC,UAAW;MACrCC,qBAAqB,EAAEZ;IAA0B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA,eACF,CAAC;AAEP;AAAClB,EAAA,CAtCQD,sBAAsB;EAAA,QAEyBP,iBAAiB,EAM9CL,WAAW,EAGnBD,WAAW,EAC5BO,WAAW;AAAA;AAAAgC,EAAA,GAZJ1B,sBAAsB;AAwC/B,eAAeA,sBAAsB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}